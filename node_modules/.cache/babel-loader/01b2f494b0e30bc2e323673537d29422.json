{"ast":null,"code":"var _jsxFileName = \"E:\\\\React_Projects\\\\e-commerce_bicycle\\\\src\\\\components\\\\context\\\\productContext.js\";\nimport React, { useReducer, useEffect, useState } from 'react';\nimport { reducer, initialState } from '../../reducers/productReducer';\nimport useDataFetching from './../custom_hooks/useDataFetching';\nimport useAsyncReducer from 'use-async-reducer';\nimport axios from 'axios'; // Try setting the useDataFetching hook here\n\nconst ProductContext = React.createContext(null);\n\nconst ProductProvider = props => {\n  const {\n    results,\n    loading\n  } = useDataFetching('https://raw.githubusercontent.com/mwayne16/e-commerce_bicycle/master/src/components/data/application.json');\n  useEffect(() => {\n    const fetchResults = async () => {\n      const data = await results;\n      initialState.items = [...data];\n      console.log(initialState);\n    };\n\n    fetchResults();\n  }, [results]);\n  const [products, dispatch] = useAsyncReducer(reducer, initialState);\n  return !results ? React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, \"Loading....\") : React.createElement(ProductContext.Provider, {\n    value: {\n      products,\n      dispatch\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, props.children);\n};\n\nexport { ProductContext, ProductProvider };","map":{"version":3,"sources":["E:/React_Projects/e-commerce_bicycle/src/components/context/productContext.js"],"names":["React","useReducer","useEffect","useState","reducer","initialState","useDataFetching","useAsyncReducer","axios","ProductContext","createContext","ProductProvider","props","results","loading","fetchResults","data","items","console","log","products","dispatch","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,QAAvC,QAAuD,OAAvD;AACA,SAASC,OAAT,EAAkBC,YAAlB,QAAsC,+BAAtC;AACA,OAAOC,eAAP,MAA4B,mCAA5B;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CACA;;AACA,MAAMC,cAAc,GAAGT,KAAK,CAACU,aAAN,CAAoB,IAApB,CAAvB;;AAEA,MAAMC,eAAe,GAAIC,KAAD,IAAW;AACjC,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAAuBR,eAAe,CAC1C,2GAD0C,CAA5C;AAIAJ,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMa,YAAY,GAAG,YAAY;AAC/B,YAAMC,IAAI,GAAG,MAAMH,OAAnB;AACAR,MAAAA,YAAY,CAACY,KAAb,GAAqB,CAAC,GAAGD,IAAJ,CAArB;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAYd,YAAZ;AACD,KAJD;;AAKAU,IAAAA,YAAY;AACb,GAPQ,EAON,CAACF,OAAD,CAPM,CAAT;AAQA,QAAM,CAACO,QAAD,EAAWC,QAAX,IAAuBd,eAAe,CAACH,OAAD,EAAUC,YAAV,CAA5C;AACA,SAAO,CAACQ,OAAD,GACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADK,GAGL,oBAAC,cAAD,CAAgB,QAAhB;AAAyB,IAAA,KAAK,EAAE;AAAEO,MAAAA,QAAF;AAAYC,MAAAA;AAAZ,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGT,KAAK,CAACU,QADT,CAHF;AAOD,CArBD;;AAsBA,SAASb,cAAT,EAAyBE,eAAzB","sourcesContent":["import React, { useReducer, useEffect, useState } from 'react';\r\nimport { reducer, initialState } from '../../reducers/productReducer';\r\nimport useDataFetching from './../custom_hooks/useDataFetching';\r\nimport useAsyncReducer from 'use-async-reducer';\r\nimport axios from 'axios';\r\n// Try setting the useDataFetching hook here\r\nconst ProductContext = React.createContext(null);\r\n\r\nconst ProductProvider = (props) => {\r\n  const { results, loading } = useDataFetching(\r\n    'https://raw.githubusercontent.com/mwayne16/e-commerce_bicycle/master/src/components/data/application.json'\r\n  );\r\n\r\n  useEffect(() => {\r\n    const fetchResults = async () => {\r\n      const data = await results;\r\n      initialState.items = [...data];\r\n      console.log(initialState);\r\n    };\r\n    fetchResults();\r\n  }, [results]);\r\n  const [products, dispatch] = useAsyncReducer(reducer, initialState);\r\n  return !results ? (\r\n    <h1>Loading....</h1>\r\n  ) : (\r\n    <ProductContext.Provider value={{ products, dispatch }}>\r\n      {props.children}\r\n    </ProductContext.Provider>\r\n  );\r\n};\r\nexport { ProductContext, ProductProvider };\r\n"]},"metadata":{},"sourceType":"module"}