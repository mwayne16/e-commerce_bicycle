{"ast":null,"code":"var _jsxFileName = \"E:\\\\React_Projects\\\\e-commerce_bicycle\\\\src\\\\components\\\\modals\\\\ProductModal.js\";\nimport React, { useState } from 'react';\nimport Modal from './Modal';\nimport '../../layout/ProductModal.css';\nimport { CartItemsContext } from './cartContext';\nimport { CartModalContext } from './modalContext';\nconst location = document.querySelector('#root-product-modal'); // Instead of sending the count to the cart modal, send the product to the cart modal and let that component handle it's own state count\n\nfunction ProductModal(props) {\n  const [product, addProduct] = React.useContext(CartItemsContext);\n  const [toggled, setToggle] = React.useContext(CartModalContext); // <-- value keeps resetting to zero. May remove value and just operate from the key\n\n  let [quanity, setQuanity] = useState(1);\n  const {\n    name,\n    sku,\n    price,\n    color,\n    src\n  } = props.items.find(product => product.key === props.selectedProduct);\n\n  const handleActions = itemAdded => {\n    if (itemAdded) {\n      addProduct(itemAdded);\n    }\n\n    props.close(true);\n    setToggle(!toggled);\n    location.dataset.toggled = false;\n  };\n\n  return React.createElement(Modal, {\n    toggled: props.toggled,\n    location: location,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"product-modal\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"product-modal-close fas fa-times\",\n    onClick: () => handleActions(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    style: {\n      background: `url(${src}) no-repeat center / 80%`\n    },\n    className: \"product-modal-img\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"product-modal-overview\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: \"product-modal-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, name), React.createElement(\"p\", {\n    className: \"product-modal-sku\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \"SKU: \", sku), React.createElement(\"p\", {\n    className: \"product-modal-price\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"$\", price, \".00\"), React.createElement(\"span\", {\n    className: \"product-modal-details\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \"View Full Details\"), React.createElement(\"p\", {\n    className: \"product-modal-colorText\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, \"Color: \", color), React.createElement(\"p\", {\n    className: \"product-modal-color\",\n    style: {\n      background: color\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"product-modal-quanity\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    className: \"quanity-label\",\n    htmlFor: \"quanity-input\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \"Quanity\"), React.createElement(\"div\", {\n    className: \"quanity-input\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    readOnly: true,\n    type: \"number\",\n    id: \"quanity-input\",\n    name: \"quanity-input\",\n    min: \"1\",\n    max: \"99\",\n    value: quanity,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"quanity-controls\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    onClick: () => setQuanity(++quanity),\n    className: \"fas fa-chevron-up\",\n    id: \"quanity-up\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    \"data-action-block\": quanity <= 1 ? true : false,\n    onClick: () => quanity <= 1 ? quanity : setQuanity(--quanity),\n    className: \"fas fa-chevron-down\",\n    id: \"quanity-down\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  })))), React.createElement(\"button\", {\n    onClick: () => handleActions([...product, {\n      item: sku,\n      quanity\n    }]),\n    className: \"product-modal-addToCart defaultButton alt-button\",\n    type: \"button\",\n    value: sku,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, \"Add To Cart\"))));\n}\n\nexport default ProductModal; // onClick={() => addProduct([...product, name])}","map":{"version":3,"sources":["E:/React_Projects/e-commerce_bicycle/src/components/modals/ProductModal.js"],"names":["React","useState","Modal","CartItemsContext","CartModalContext","location","document","querySelector","ProductModal","props","product","addProduct","useContext","toggled","setToggle","quanity","setQuanity","name","sku","price","color","src","items","find","key","selectedProduct","handleActions","itemAdded","close","dataset","background","item"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAO,+BAAP;AACA,SAASC,gBAAT,QAAiC,eAAjC;AACA,SAASC,gBAAT,QAAiC,gBAAjC;AAEA,MAAMC,QAAQ,GAAGC,QAAQ,CAACC,aAAT,CAAuB,qBAAvB,CAAjB,C,CACA;;AACA,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAC3B,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBX,KAAK,CAACY,UAAN,CAAiBT,gBAAjB,CAA9B;AACA,QAAM,CAACU,OAAD,EAAUC,SAAV,IAAuBd,KAAK,CAACY,UAAN,CAAiBR,gBAAjB,CAA7B,CAF2B,CAEsC;;AACjE,MAAI,CAACW,OAAD,EAAUC,UAAV,IAAwBf,QAAQ,CAAC,CAAD,CAApC;AAEA,QAAM;AAAEgB,IAAAA,IAAF;AAAQC,IAAAA,GAAR;AAAaC,IAAAA,KAAb;AAAoBC,IAAAA,KAApB;AAA2BC,IAAAA;AAA3B,MAAmCZ,KAAK,CAACa,KAAN,CAAYC,IAAZ,CACtCb,OAAD,IAAaA,OAAO,CAACc,GAAR,KAAgBf,KAAK,CAACgB,eADI,CAAzC;;AAIA,QAAMC,aAAa,GAAIC,SAAD,IAAe;AACnC,QAAIA,SAAJ,EAAe;AACbhB,MAAAA,UAAU,CAACgB,SAAD,CAAV;AACD;;AACDlB,IAAAA,KAAK,CAACmB,KAAN,CAAY,IAAZ;AACAd,IAAAA,SAAS,CAAC,CAACD,OAAF,CAAT;AACAR,IAAAA,QAAQ,CAACwB,OAAT,CAAiBhB,OAAjB,GAA2B,KAA3B;AACD,GAPD;;AASA,SACE,oBAAC,KAAD;AAAO,IAAA,OAAO,EAAEJ,KAAK,CAACI,OAAtB;AAA+B,IAAA,QAAQ,EAAER,QAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,SAAS,EAAC,kCADZ;AAEE,IAAA,OAAO,EAAE,MAAMqB,aAAa,EAF9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAKE;AACE,IAAA,KAAK,EAAE;AAAEI,MAAAA,UAAU,EAAG,OAAMT,GAAI;AAAzB,KADT;AAEE,IAAA,SAAS,EAAC,mBAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,EASE;AAAK,IAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,qBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAqCJ,IAArC,CADF,EAEE;AAAG,IAAA,SAAS,EAAC,mBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAuCC,GAAvC,CAFF,EAGE;AAAG,IAAA,SAAS,EAAC,qBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAqCC,KAArC,QAHF,EAIE;AAAM,IAAA,SAAS,EAAC,uBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAJF,EAKE;AAAG,IAAA,SAAS,EAAC,yBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAA+CC,KAA/C,CALF,EAME;AAAG,IAAA,SAAS,EAAC,qBAAb;AAAmC,IAAA,KAAK,EAAE;AAAEU,MAAAA,UAAU,EAAEV;AAAd,KAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,EAOE;AAAK,IAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,SAAS,EAAC,eAAjB;AAAiC,IAAA,OAAO,EAAC,eAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAIE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,QAAQ,MADV;AAEE,IAAA,IAAI,EAAC,QAFP;AAGE,IAAA,EAAE,EAAC,eAHL;AAIE,IAAA,IAAI,EAAC,eAJP;AAKE,IAAA,GAAG,EAAC,GALN;AAME,IAAA,GAAG,EAAC,IANN;AAOE,IAAA,KAAK,EAAEL,OAPT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAUE;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,OAAO,EAAE,MAAMC,UAAU,CAAC,EAAED,OAAH,CAD3B;AAEE,IAAA,SAAS,EAAC,mBAFZ;AAGE,IAAA,EAAE,EAAC,YAHL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAME;AACE,yBAAmBA,OAAO,IAAI,CAAX,GAAe,IAAf,GAAsB,KAD3C;AAEE,IAAA,OAAO,EAAE,MACPA,OAAO,IAAI,CAAX,GAAeA,OAAf,GAAyBC,UAAU,CAAC,EAAED,OAAH,CAHvC;AAKE,IAAA,SAAS,EAAC,qBALZ;AAME,IAAA,EAAE,EAAC,cANL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CAVF,CAJF,CAPF,EAsCE;AACE,IAAA,OAAO,EAAE,MAAMW,aAAa,CAAC,CAAC,GAAGhB,OAAJ,EAAa;AAAEqB,MAAAA,IAAI,EAAEb,GAAR;AAAaH,MAAAA;AAAb,KAAb,CAAD,CAD9B;AAEE,IAAA,SAAS,EAAC,kDAFZ;AAGE,IAAA,IAAI,EAAC,QAHP;AAIE,IAAA,KAAK,EAAEG,GAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAtCF,CATF,CADF,CADF;AA6DD;;AACD,eAAeV,YAAf,C,CAEA","sourcesContent":["import React, { useState } from 'react';\r\nimport Modal from './Modal';\r\nimport '../../layout/ProductModal.css';\r\nimport { CartItemsContext } from './cartContext';\r\nimport { CartModalContext } from './modalContext';\r\n\r\nconst location = document.querySelector('#root-product-modal');\r\n// Instead of sending the count to the cart modal, send the product to the cart modal and let that component handle it's own state count\r\nfunction ProductModal(props) {\r\n  const [product, addProduct] = React.useContext(CartItemsContext);\r\n  const [toggled, setToggle] = React.useContext(CartModalContext); // <-- value keeps resetting to zero. May remove value and just operate from the key\r\n  let [quanity, setQuanity] = useState(1);\r\n\r\n  const { name, sku, price, color, src } = props.items.find(\r\n    (product) => product.key === props.selectedProduct\r\n  );\r\n\r\n  const handleActions = (itemAdded) => {\r\n    if (itemAdded) {\r\n      addProduct(itemAdded);\r\n    }\r\n    props.close(true);\r\n    setToggle(!toggled);\r\n    location.dataset.toggled = false;\r\n  };\r\n\r\n  return (\r\n    <Modal toggled={props.toggled} location={location}>\r\n      <div className=\"product-modal\">\r\n        <button\r\n          className=\"product-modal-close fas fa-times\"\r\n          onClick={() => handleActions()}\r\n        ></button>\r\n        <div\r\n          style={{ background: `url(${src}) no-repeat center / 80%` }}\r\n          className=\"product-modal-img\"\r\n        ></div>\r\n        <div className=\"product-modal-overview\">\r\n          <h1 className=\"product-modal-title\">{name}</h1>\r\n          <p className=\"product-modal-sku\">SKU: {sku}</p>\r\n          <p className=\"product-modal-price\">${price}.00</p>\r\n          <span className=\"product-modal-details\">View Full Details</span>\r\n          <p className=\"product-modal-colorText\">Color: {color}</p>\r\n          <p className=\"product-modal-color\" style={{ background: color }}></p>\r\n          <div className=\"product-modal-quanity\">\r\n            <label className=\"quanity-label\" htmlFor=\"quanity-input\">\r\n              Quanity\r\n            </label>\r\n            <div className=\"quanity-input\">\r\n              <input\r\n                readOnly\r\n                type=\"number\"\r\n                id=\"quanity-input\"\r\n                name=\"quanity-input\"\r\n                min=\"1\"\r\n                max=\"99\"\r\n                value={quanity}\r\n              />\r\n              <div className=\"quanity-controls\">\r\n                <span\r\n                  onClick={() => setQuanity(++quanity)}\r\n                  className=\"fas fa-chevron-up\"\r\n                  id=\"quanity-up\"\r\n                ></span>\r\n                <span\r\n                  data-action-block={quanity <= 1 ? true : false}\r\n                  onClick={() =>\r\n                    quanity <= 1 ? quanity : setQuanity(--quanity)\r\n                  }\r\n                  className=\"fas fa-chevron-down\"\r\n                  id=\"quanity-down\"\r\n                ></span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <button\r\n            onClick={() => handleActions([...product, { item: sku, quanity }])}\r\n            className=\"product-modal-addToCart defaultButton alt-button\"\r\n            type=\"button\"\r\n            value={sku}\r\n          >\r\n            Add To Cart\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </Modal>\r\n  );\r\n}\r\nexport default ProductModal;\r\n\r\n// onClick={() => addProduct([...product, name])}\r\n"]},"metadata":{},"sourceType":"module"}