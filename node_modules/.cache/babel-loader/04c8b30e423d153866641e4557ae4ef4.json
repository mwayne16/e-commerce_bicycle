{"ast":null,"code":"var _jsxFileName = \"E:\\\\React_Projects\\\\e-commerce_bicycle\\\\src\\\\components\\\\context\\\\productContext.js\";\nimport React, { useReducer, useEffect } from 'react';\nimport { reducer, initialState } from '../../reducers/productReducer';\nimport useDataFetching from './../custom_hooks/useDataFetching';\nimport ReactLoading from 'react-loading'; // Try setting the useDataFetching hook here\n\nconst ProductContext = React.createContext(null);\n\nconst ProductProvider = props => {\n  const {\n    results,\n    loading\n  } = useDataFetching('https://raw.githubusercontent.com/mwayne16/e-commerce_bicycle/master/src/components/data/application.json');\n  useEffect(() => {\n    const fetchResults = () => {\n      initialState.items.push(...results);\n    };\n\n    fetchResults();\n  }, [results]);\n  const [products, dispatch] = useReducer(reducer, initialState);\n  return !loading ? React.createElement(ReactLoading, {\n    style: {\n      position: 'fixed',\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    type: 'spin',\n    color: '#000',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }) : React.createElement(ProductContext.Provider, {\n    value: {\n      products,\n      dispatch\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, props.children);\n};\n\nexport { ProductContext, ProductProvider };","map":{"version":3,"sources":["E:/React_Projects/e-commerce_bicycle/src/components/context/productContext.js"],"names":["React","useReducer","useEffect","reducer","initialState","useDataFetching","ReactLoading","ProductContext","createContext","ProductProvider","props","results","loading","fetchResults","items","push","products","dispatch","position","display","justifyContent","alignItems","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,QAA6C,OAA7C;AACA,SAASC,OAAT,EAAkBC,YAAlB,QAAsC,+BAAtC;AACA,OAAOC,eAAP,MAA4B,mCAA5B;AACA,OAAOC,YAAP,MAAyB,eAAzB,C,CACA;;AACA,MAAMC,cAAc,GAAGP,KAAK,CAACQ,aAAN,CAAoB,IAApB,CAAvB;;AAEA,MAAMC,eAAe,GAAIC,KAAD,IAAW;AACjC,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAAuBP,eAAe,CAC1C,2GAD0C,CAA5C;AAIAH,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMW,YAAY,GAAG,MAAM;AACzBT,MAAAA,YAAY,CAACU,KAAb,CAAmBC,IAAnB,CAAwB,GAAGJ,OAA3B;AACD,KAFD;;AAGAE,IAAAA,YAAY;AACb,GALQ,EAKN,CAACF,OAAD,CALM,CAAT;AAMA,QAAM,CAACK,QAAD,EAAWC,QAAX,IAAuBhB,UAAU,CAACE,OAAD,EAAUC,YAAV,CAAvC;AACA,SAAO,CAACQ,OAAD,GACL,oBAAC,YAAD;AACE,IAAA,KAAK,EAAE;AACLM,MAAAA,QAAQ,EAAE,OADL;AAELC,MAAAA,OAAO,EAAE,MAFJ;AAGLC,MAAAA,cAAc,EAAE,QAHX;AAILC,MAAAA,UAAU,EAAE;AAJP,KADT;AAOE,IAAA,IAAI,EAAE,MAPR;AAQE,IAAA,KAAK,EAAE,MART;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADK,GAYL,oBAAC,cAAD,CAAgB,QAAhB;AAAyB,IAAA,KAAK,EAAE;AAAEL,MAAAA,QAAF;AAAYC,MAAAA;AAAZ,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGP,KAAK,CAACY,QADT,CAZF;AAgBD,CA5BD;;AA6BA,SAASf,cAAT,EAAyBE,eAAzB","sourcesContent":["import React, { useReducer, useEffect } from 'react';\r\nimport { reducer, initialState } from '../../reducers/productReducer';\r\nimport useDataFetching from './../custom_hooks/useDataFetching';\r\nimport ReactLoading from 'react-loading';\r\n// Try setting the useDataFetching hook here\r\nconst ProductContext = React.createContext(null);\r\n\r\nconst ProductProvider = (props) => {\r\n  const { results, loading } = useDataFetching(\r\n    'https://raw.githubusercontent.com/mwayne16/e-commerce_bicycle/master/src/components/data/application.json'\r\n  );\r\n\r\n  useEffect(() => {\r\n    const fetchResults = () => {\r\n      initialState.items.push(...results);\r\n    };\r\n    fetchResults();\r\n  }, [results]);\r\n  const [products, dispatch] = useReducer(reducer, initialState);\r\n  return !loading ? (\r\n    <ReactLoading\r\n      style={{\r\n        position: 'fixed',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n      }}\r\n      type={'spin'}\r\n      color={'#000'}\r\n    />\r\n  ) : (\r\n    <ProductContext.Provider value={{ products, dispatch }}>\r\n      {props.children}\r\n    </ProductContext.Provider>\r\n  );\r\n};\r\nexport { ProductContext, ProductProvider };\r\n"]},"metadata":{},"sourceType":"module"}