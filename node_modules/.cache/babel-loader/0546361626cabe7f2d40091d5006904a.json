{"ast":null,"code":"var _jsxFileName = \"E:\\\\React_Projects\\\\e-commerce_bicycle\\\\src\\\\components\\\\modals\\\\cartContext.js\";\nimport React from 'react';\nimport useLocalStorage from '../custom_hooks/useLocalStorage';\nconst CartItemsContext = React.createContext();\n\nconst CartProvider = props => {\n  const [products, setProduct] = useLocalStorage('selected-products', []); // const prices = products.map((product) =>\n  //   val.push(product.price * product.quanity)\n  // );\n\n  const subTotal = products.length >= 1 ? products.map(product => parseFloat(product.price.toFixed(2)) * product.quanity).reduce((acc, curr) => acc + curr) : 0;\n  console.log(subTotal);\n  return React.createElement(CartItemsContext.Provider, {\n    value: {\n      products,\n      setProduct,\n      subTotal\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, props.children);\n};\n\nexport { CartItemsContext, CartProvider }; // const subTotal = product.reduce(\n//   (acc, curr) => acc.price * acc.quanity + curr.price * curr.quanity\n// );","map":{"version":3,"sources":["E:/React_Projects/e-commerce_bicycle/src/components/modals/cartContext.js"],"names":["React","useLocalStorage","CartItemsContext","createContext","CartProvider","props","products","setProduct","subTotal","length","map","product","parseFloat","price","toFixed","quanity","reduce","acc","curr","console","log","children"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,eAAP,MAA4B,iCAA5B;AAEA,MAAMC,gBAAgB,GAAGF,KAAK,CAACG,aAAN,EAAzB;;AACA,MAAMC,YAAY,GAAIC,KAAD,IAAW;AAC9B,QAAM,CAACC,QAAD,EAAWC,UAAX,IAAyBN,eAAe,CAAC,mBAAD,EAAsB,EAAtB,CAA9C,CAD8B,CAE9B;AACA;AACA;;AAEA,QAAMO,QAAQ,GACZF,QAAQ,CAACG,MAAT,IAAmB,CAAnB,GACIH,QAAQ,CACLI,GADH,CAEKC,OAAD,IAAaC,UAAU,CAACD,OAAO,CAACE,KAAR,CAAcC,OAAd,CAAsB,CAAtB,CAAD,CAAV,GAAuCH,OAAO,CAACI,OAFhE,EAIGC,MAJH,CAIU,CAACC,GAAD,EAAMC,IAAN,KAAeD,GAAG,GAAGC,IAJ/B,CADJ,GAMI,CAPN;AAQAC,EAAAA,OAAO,CAACC,GAAR,CAAYZ,QAAZ;AACA,SACE,oBAAC,gBAAD,CAAkB,QAAlB;AAA2B,IAAA,KAAK,EAAE;AAAEF,MAAAA,QAAF;AAAYC,MAAAA,UAAZ;AAAwBC,MAAAA;AAAxB,KAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,KAAK,CAACgB,QADT,CADF;AAKD,CApBD;;AAsBA,SAASnB,gBAAT,EAA2BE,YAA3B,G,CAEA;AACA;AACA","sourcesContent":["import React from 'react';\r\nimport useLocalStorage from '../custom_hooks/useLocalStorage';\r\n\r\nconst CartItemsContext = React.createContext();\r\nconst CartProvider = (props) => {\r\n  const [products, setProduct] = useLocalStorage('selected-products', []);\r\n  // const prices = products.map((product) =>\r\n  //   val.push(product.price * product.quanity)\r\n  // );\r\n\r\n  const subTotal =\r\n    products.length >= 1\r\n      ? products\r\n          .map(\r\n            (product) => parseFloat(product.price.toFixed(2)) * product.quanity\r\n          )\r\n          .reduce((acc, curr) => acc + curr)\r\n      : 0;\r\n  console.log(subTotal);\r\n  return (\r\n    <CartItemsContext.Provider value={{ products, setProduct, subTotal }}>\r\n      {props.children}\r\n    </CartItemsContext.Provider>\r\n  );\r\n};\r\n\r\nexport { CartItemsContext, CartProvider };\r\n\r\n// const subTotal = product.reduce(\r\n//   (acc, curr) => acc.price * acc.quanity + curr.price * curr.quanity\r\n// );\r\n"]},"metadata":{},"sourceType":"module"}