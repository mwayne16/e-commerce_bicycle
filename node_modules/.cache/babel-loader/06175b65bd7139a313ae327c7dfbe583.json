{"ast":null,"code":"var _jsxFileName = \"E:\\\\React_Projects\\\\e-commerce_bicycle\\\\src\\\\components\\\\ProductModal.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport '../layout/ProductModal.css'; // Lift state up the same way I did with the color selector to filter card component\n// Find a way to center modal in relation to scroll position\n\nfunction ProductModal(props) {\n  const modal = document.querySelector('#root-product-modal');\n  modal.dataset.toggled = props.toggled;\n  const previewedProduct = props.items.find(product => product.key === props.selectedProduct);\n  const {\n    name,\n    sku,\n    price,\n    color,\n    src\n  } = previewedProduct;\n  return ReactDOM.createPortal(React.createElement(\"div\", {\n    className: \"product-modal\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"product-modal-close fas fa-times\",\n    onClick: () => {\n      modal.dataset.toggled = false;\n      props.close(true);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    style: {\n      background: `url(${src}) no-repeat center / 80%`\n    },\n    className: \"product-modal-img\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"product-modal-overview\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: \"product-modal-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, name), React.createElement(\"p\", {\n    className: \"product-modal-sku\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, \"SKU: \", sku), React.createElement(\"p\", {\n    className: \"product-modal-price\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"$\", price, \".00\"), React.createElement(\"span\", {\n    className: \"product-modal-details\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"view full details\"), React.createElement(\"p\", {\n    className: \"product-modal-colorText\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"Color:\", color), React.createElement(\"p\", {\n    className: \"product-modal-color\",\n    style: {\n      background: color\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"Color\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"Quanity Box\"), React.createElement(\"button\", {\n    className: \"product-modal-addToCart\",\n    type: \"button\",\n    value: sku,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \"Add To Cart\"))), modal);\n}\n\nexport default ProductModal;","map":{"version":3,"sources":["E:/React_Projects/e-commerce_bicycle/src/components/ProductModal.js"],"names":["React","ReactDOM","ProductModal","props","modal","document","querySelector","dataset","toggled","previewedProduct","items","find","product","key","selectedProduct","name","sku","price","color","src","createPortal","close","background"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,4BAAP,C,CACA;AACA;;AACA,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAC3B,QAAMC,KAAK,GAAGC,QAAQ,CAACC,aAAT,CAAuB,qBAAvB,CAAd;AACAF,EAAAA,KAAK,CAACG,OAAN,CAAcC,OAAd,GAAwBL,KAAK,CAACK,OAA9B;AACA,QAAMC,gBAAgB,GAAGN,KAAK,CAACO,KAAN,CAAYC,IAAZ,CACtBC,OAAD,IAAaA,OAAO,CAACC,GAAR,KAAgBV,KAAK,CAACW,eADZ,CAAzB;AAIA,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,GAAR;AAAaC,IAAAA,KAAb;AAAoBC,IAAAA,KAApB;AAA2BC,IAAAA;AAA3B,MAAmCV,gBAAzC;AAEA,SAAOR,QAAQ,CAACmB,YAAT,CACL;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,SAAS,EAAC,kCADZ;AAEE,IAAA,OAAO,EAAE,MAAM;AACbhB,MAAAA,KAAK,CAACG,OAAN,CAAcC,OAAd,GAAwB,KAAxB;AACAL,MAAAA,KAAK,CAACkB,KAAN,CAAY,IAAZ;AACD,KALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAQE;AACE,IAAA,KAAK,EAAE;AAAEC,MAAAA,UAAU,EAAG,OAAMH,GAAI;AAAzB,KADT;AAEE,IAAA,SAAS,EAAC,mBAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,EAcE;AAAK,IAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,qBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAqCJ,IAArC,CADF,EAEE;AAAG,IAAA,SAAS,EAAC,mBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAuCC,GAAvC,CAFF,EAGE;AAAG,IAAA,SAAS,EAAC,qBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAqCC,KAArC,QAHF,EAIE;AAAM,IAAA,SAAS,EAAC,uBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAJF,EAKE;AAAG,IAAA,SAAS,EAAC,yBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAA8CC,KAA9C,CALF,EAME;AAAG,IAAA,SAAS,EAAC,qBAAb;AAAmC,IAAA,KAAK,EAAE;AAAEI,MAAAA,UAAU,EAAEJ;AAAd,KAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aANF,EASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBATF,EAUE;AAAQ,IAAA,SAAS,EAAC,yBAAlB;AAA4C,IAAA,IAAI,EAAC,QAAjD;AAA0D,IAAA,KAAK,EAAEF,GAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAVF,CAdF,CADK,EA8BLZ,KA9BK,CAAP;AAgCD;;AACD,eAAeF,YAAf","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport '../layout/ProductModal.css';\r\n// Lift state up the same way I did with the color selector to filter card component\r\n// Find a way to center modal in relation to scroll position\r\nfunction ProductModal(props) {\r\n  const modal = document.querySelector('#root-product-modal');\r\n  modal.dataset.toggled = props.toggled;\r\n  const previewedProduct = props.items.find(\r\n    (product) => product.key === props.selectedProduct\r\n  );\r\n\r\n  const { name, sku, price, color, src } = previewedProduct;\r\n\r\n  return ReactDOM.createPortal(\r\n    <div className=\"product-modal\">\r\n      <button\r\n        className=\"product-modal-close fas fa-times\"\r\n        onClick={() => {\r\n          modal.dataset.toggled = false;\r\n          props.close(true);\r\n        }}\r\n      ></button>\r\n      <div\r\n        style={{ background: `url(${src}) no-repeat center / 80%` }}\r\n        className=\"product-modal-img\"\r\n      >\r\n        {/* <img src={src} alt=\"productimage\" /> */}\r\n      </div>\r\n      <div className=\"product-modal-overview\">\r\n        <h1 className=\"product-modal-title\">{name}</h1>\r\n        <p className=\"product-modal-sku\">SKU: {sku}</p>\r\n        <p className=\"product-modal-price\">${price}.00</p>\r\n        <span className=\"product-modal-details\">view full details</span>\r\n        <p className=\"product-modal-colorText\">Color:{color}</p>\r\n        <p className=\"product-modal-color\" style={{ background: color }}>\r\n          Color\r\n        </p>\r\n        <div>Quanity Box</div>\r\n        <button className=\"product-modal-addToCart\" type=\"button\" value={sku}>\r\n          Add To Cart\r\n        </button>\r\n      </div>\r\n    </div>,\r\n    modal\r\n  );\r\n}\r\nexport default ProductModal;\r\n"]},"metadata":{},"sourceType":"module"}