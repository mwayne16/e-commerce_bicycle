{"ast":null,"code":"var _jsxFileName = \"E:\\\\React_Projects\\\\e-commerce_bicycle\\\\src\\\\components\\\\modals\\\\ProductModal.js\";\nimport React, { useState, useContext } from 'react';\nimport Modal from './Modal';\nimport '../../layout/styles/ProductModal.css';\nimport { CartItemsContext } from '../context/cartContext';\nimport { CartModalContext } from '../context/modalContext';\nimport { ProductItemMain } from '../ProductItemPage';\nimport { ProductContext } from '../../layout/pages/Shop';\nconst location = document.querySelector('#root-product-modal'); // Instead of sending the count to the cart modal, send the product to the cart modal and let that component handle it's own state count\n\nfunction ProductModal(props) {\n  const currentProduct = props.items.find(product => product.key === props.selectedProduct);\n\n  const closeModal = () => {\n    location.dataset.toggled = false;\n    props.close(true);\n  };\n\n  return React.createElement(Modal, {\n    toggled: props.toggled,\n    location: location,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"product-modal\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"product-modal-close fas fa-times\",\n    onClick: closeModal,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }), React.createElement(ProductItemMain, {\n    currentProduct: currentProduct,\n    bgSize: '85%',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  })));\n}\n\nexport default ProductModal; // onClick={() => addProduct([...product, name])}\n\n/* <div\r\n          style={{ background: `url(${src}) no-repeat center / 80%` }}\r\n          className=\"product-modal-img\"\r\n        ></div>\r\n        <div className=\"product-modal-overview\">\r\n          <h1 className=\"product-modal-title\">{name}</h1>\r\n          <p className=\"product-modal-sku\">SKU: {sku}</p>\r\n          <p className=\"product-modal-price\">${price}</p>\r\n          <span className=\"product-modal-details\">View Full Details</span>\r\n          <p className=\"product-modal-colorText\">Color: {color}</p>\r\n          <p className=\"product-modal-color\" style={{ background: color }}></p>\r\n          <div className=\"product-modal-quanity\">\r\n            <label className=\"quanity-label\" htmlFor=\"quanity-input\">\r\n              Quanity\r\n            </label>\r\n            <div className=\"quanity-input\">\r\n              <input\r\n                readOnly\r\n                type=\"number\"\r\n                id=\"quanity-input\"\r\n                name=\"quanity-input\"\r\n                min=\"1\"\r\n                max=\"99\"\r\n                value={quanity}\r\n              />\r\n              <div className=\"quanity-controls\">\r\n                <span\r\n                  onClick={() => setQuanity(++quanity)}\r\n                  className=\"fas fa-chevron-up\"\r\n                  id=\"quanity-up\"\r\n                ></span>\r\n                <span\r\n                  data-action-block={quanity <= 1 ? true : false}\r\n                  onClick={() =>\r\n                    quanity <= 1 ? quanity : setQuanity(--quanity)\r\n                  }\r\n                  className=\"fas fa-chevron-down\"\r\n                  id=\"quanity-down\"\r\n                ></span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <button\r\n            onClick={addItemToCart.bind(this, [\r\n              ...products,\r\n              { name, sku, quanity, price, src, key },\r\n            ])}\r\n            className=\"product-modal-addToCart defaultButton alt-button\"\r\n            type=\"button\"\r\n            value={sku}\r\n          >\r\n            Add To Cart\r\n          </button>\r\n        </div> */","map":{"version":3,"sources":["E:/React_Projects/e-commerce_bicycle/src/components/modals/ProductModal.js"],"names":["React","useState","useContext","Modal","CartItemsContext","CartModalContext","ProductItemMain","ProductContext","location","document","querySelector","ProductModal","props","currentProduct","items","find","product","key","selectedProduct","closeModal","dataset","toggled","close"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAO,sCAAP;AACA,SAASC,gBAAT,QAAiC,wBAAjC;AACA,SAASC,gBAAT,QAAiC,yBAAjC;AACA,SAASC,eAAT,QAAgC,oBAAhC;AACA,SAASC,cAAT,QAA+B,yBAA/B;AAEA,MAAMC,QAAQ,GAAGC,QAAQ,CAACC,aAAT,CAAuB,qBAAvB,CAAjB,C,CACA;;AACA,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAC3B,QAAMC,cAAc,GAAGD,KAAK,CAACE,KAAN,CAAYC,IAAZ,CACpBC,OAAD,IAAaA,OAAO,CAACC,GAAR,KAAgBL,KAAK,CAACM,eADd,CAAvB;;AAGA,QAAMC,UAAU,GAAG,MAAM;AACvBX,IAAAA,QAAQ,CAACY,OAAT,CAAiBC,OAAjB,GAA2B,KAA3B;AACAT,IAAAA,KAAK,CAACU,KAAN,CAAY,IAAZ;AACD,GAHD;;AAKA,SACE,oBAAC,KAAD;AAAO,IAAA,OAAO,EAAEV,KAAK,CAACS,OAAtB;AAA+B,IAAA,QAAQ,EAAEb,QAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,SAAS,EAAC,kCADZ;AAEE,IAAA,OAAO,EAAEW,UAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAKE,oBAAC,eAAD;AAAiB,IAAA,cAAc,EAAEN,cAAjC;AAAiD,IAAA,MAAM,EAAE,KAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CADF,CADF;AAWD;;AACD,eAAeF,YAAf,C,CAEA;;AAEA","sourcesContent":["import React, { useState, useContext } from 'react';\r\nimport Modal from './Modal';\r\nimport '../../layout/styles/ProductModal.css';\r\nimport { CartItemsContext } from '../context/cartContext';\r\nimport { CartModalContext } from '../context/modalContext';\r\nimport { ProductItemMain } from '../ProductItemPage';\r\nimport { ProductContext } from '../../layout/pages/Shop';\r\n\r\nconst location = document.querySelector('#root-product-modal');\r\n// Instead of sending the count to the cart modal, send the product to the cart modal and let that component handle it's own state count\r\nfunction ProductModal(props) {\r\n  const currentProduct = props.items.find(\r\n    (product) => product.key === props.selectedProduct\r\n  );\r\n  const closeModal = () => {\r\n    location.dataset.toggled = false;\r\n    props.close(true);\r\n  };\r\n\r\n  return (\r\n    <Modal toggled={props.toggled} location={location}>\r\n      <div className=\"product-modal\">\r\n        <button\r\n          className=\"product-modal-close fas fa-times\"\r\n          onClick={closeModal}\r\n        ></button>\r\n        <ProductItemMain currentProduct={currentProduct} bgSize={'85%'} />\r\n      </div>\r\n    </Modal>\r\n  );\r\n}\r\nexport default ProductModal;\r\n\r\n// onClick={() => addProduct([...product, name])}\r\n\r\n/* <div\r\n          style={{ background: `url(${src}) no-repeat center / 80%` }}\r\n          className=\"product-modal-img\"\r\n        ></div>\r\n        <div className=\"product-modal-overview\">\r\n          <h1 className=\"product-modal-title\">{name}</h1>\r\n          <p className=\"product-modal-sku\">SKU: {sku}</p>\r\n          <p className=\"product-modal-price\">${price}</p>\r\n          <span className=\"product-modal-details\">View Full Details</span>\r\n          <p className=\"product-modal-colorText\">Color: {color}</p>\r\n          <p className=\"product-modal-color\" style={{ background: color }}></p>\r\n          <div className=\"product-modal-quanity\">\r\n            <label className=\"quanity-label\" htmlFor=\"quanity-input\">\r\n              Quanity\r\n            </label>\r\n            <div className=\"quanity-input\">\r\n              <input\r\n                readOnly\r\n                type=\"number\"\r\n                id=\"quanity-input\"\r\n                name=\"quanity-input\"\r\n                min=\"1\"\r\n                max=\"99\"\r\n                value={quanity}\r\n              />\r\n              <div className=\"quanity-controls\">\r\n                <span\r\n                  onClick={() => setQuanity(++quanity)}\r\n                  className=\"fas fa-chevron-up\"\r\n                  id=\"quanity-up\"\r\n                ></span>\r\n                <span\r\n                  data-action-block={quanity <= 1 ? true : false}\r\n                  onClick={() =>\r\n                    quanity <= 1 ? quanity : setQuanity(--quanity)\r\n                  }\r\n                  className=\"fas fa-chevron-down\"\r\n                  id=\"quanity-down\"\r\n                ></span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <button\r\n            onClick={addItemToCart.bind(this, [\r\n              ...products,\r\n              { name, sku, quanity, price, src, key },\r\n            ])}\r\n            className=\"product-modal-addToCart defaultButton alt-button\"\r\n            type=\"button\"\r\n            value={sku}\r\n          >\r\n            Add To Cart\r\n          </button>\r\n        </div> */\r\n"]},"metadata":{},"sourceType":"module"}