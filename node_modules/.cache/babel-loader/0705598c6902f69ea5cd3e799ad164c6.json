{"ast":null,"code":"var _jsxFileName = \"E:\\\\React_Projects\\\\e-commerce_bicycle\\\\src\\\\components\\\\context\\\\productContext.js\";\nimport React, { useReducer, useEffect, useState } from 'react';\nimport { reducer } from '../../reducers/productReducer';\nimport useDataFetching from './../custom_hooks/useDataFetching'; // Try setting the useDataFetching hook here\n\nconst ProductContext = React.createContext(null);\n\nconst ProductProvider = props => {\n  const {\n    results,\n    loading\n  } = useDataFetching('https://raw.githubusercontent.com/mwayne16/e-commerce_bicycle/master/src/components/data/application.json');\n  const [fetchedResults, setResults] = useState({\n    items: [],\n    filteredItems: []\n  });\n  useEffect(() => {\n    if (loading) {\n      return;\n    }\n\n    setResults({\n      filteredItems: fetchedResults.filteredItems,\n      items: [...results]\n    });\n  }, [loading, results]);\n  const [products, dispatch] = useReducer(reducer, fetchedResults);\n  console.log(fetchedResults, products);\n  return React.createElement(ProductContext.Provider, {\n    value: {\n      products,\n      dispatch\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, props.children);\n};\n\nexport { ProductContext, ProductProvider };","map":{"version":3,"sources":["E:/React_Projects/e-commerce_bicycle/src/components/context/productContext.js"],"names":["React","useReducer","useEffect","useState","reducer","useDataFetching","ProductContext","createContext","ProductProvider","props","results","loading","fetchedResults","setResults","items","filteredItems","products","dispatch","console","log","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,QAAvC,QAAuD,OAAvD;AACA,SAASC,OAAT,QAAwB,+BAAxB;AACA,OAAOC,eAAP,MAA4B,mCAA5B,C,CACA;;AACA,MAAMC,cAAc,GAAGN,KAAK,CAACO,aAAN,CAAoB,IAApB,CAAvB;;AACA,MAAMC,eAAe,GAAIC,KAAD,IAAW;AACjC,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAAuBN,eAAe,CAC1C,2GAD0C,CAA5C;AAGA,QAAM,CAACO,cAAD,EAAiBC,UAAjB,IAA+BV,QAAQ,CAAC;AAC5CW,IAAAA,KAAK,EAAE,EADqC;AAE5CC,IAAAA,aAAa,EAAE;AAF6B,GAAD,CAA7C;AAKAb,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIS,OAAJ,EAAa;AACX;AACD;;AACDE,IAAAA,UAAU,CAAC;AACTE,MAAAA,aAAa,EAAEH,cAAc,CAACG,aADrB;AAETD,MAAAA,KAAK,EAAE,CAAC,GAAGJ,OAAJ;AAFE,KAAD,CAAV;AAID,GARQ,EAQN,CAACC,OAAD,EAAUD,OAAV,CARM,CAAT;AASA,QAAM,CAACM,QAAD,EAAWC,QAAX,IAAuBhB,UAAU,CAACG,OAAD,EAAUQ,cAAV,CAAvC;AACAM,EAAAA,OAAO,CAACC,GAAR,CAAYP,cAAZ,EAA4BI,QAA5B;AACA,SACE,oBAAC,cAAD,CAAgB,QAAhB;AAAyB,IAAA,KAAK,EAAE;AAAEA,MAAAA,QAAF;AAAYC,MAAAA;AAAZ,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGR,KAAK,CAACW,QADT,CADF;AAKD,CAzBD;;AA0BA,SAASd,cAAT,EAAyBE,eAAzB","sourcesContent":["import React, { useReducer, useEffect, useState } from 'react';\r\nimport { reducer } from '../../reducers/productReducer';\r\nimport useDataFetching from './../custom_hooks/useDataFetching';\r\n// Try setting the useDataFetching hook here\r\nconst ProductContext = React.createContext(null);\r\nconst ProductProvider = (props) => {\r\n  const { results, loading } = useDataFetching(\r\n    'https://raw.githubusercontent.com/mwayne16/e-commerce_bicycle/master/src/components/data/application.json'\r\n  );\r\n  const [fetchedResults, setResults] = useState({\r\n    items: [],\r\n    filteredItems: [],\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (loading) {\r\n      return;\r\n    }\r\n    setResults({\r\n      filteredItems: fetchedResults.filteredItems,\r\n      items: [...results],\r\n    });\r\n  }, [loading, results]);\r\n  const [products, dispatch] = useReducer(reducer, fetchedResults);\r\n  console.log(fetchedResults, products);\r\n  return (\r\n    <ProductContext.Provider value={{ products, dispatch }}>\r\n      {props.children}\r\n    </ProductContext.Provider>\r\n  );\r\n};\r\nexport { ProductContext, ProductProvider };\r\n"]},"metadata":{},"sourceType":"module"}