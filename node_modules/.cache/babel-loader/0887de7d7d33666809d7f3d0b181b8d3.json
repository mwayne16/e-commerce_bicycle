{"ast":null,"code":"var _jsxFileName = \"E:\\\\React_Projects\\\\e-commerce_bicycle\\\\src\\\\components\\\\modals\\\\ProductModal.js\";\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport useLocalStorage from '../custom_hooks/useLocalStorage';\nimport { ModalContext } from './modalContext';\nimport '../../layout/ProductModal.css';\nimport App from './../../App';\nconst location = document.querySelector('#root-product-modal'); // Instead of sending the count to the cart modal, send the product to the cart modal and let that component handle it's own state count\n\nfunction ProductModal(props) {\n  console.log('ran');\n  const {\n    toggled,\n    handleModal,\n    modal\n  } = React.useContext(ModalContext);\n  const [product, addProduct] = useLocalStorage('selected-products', []); // <-- value keeps resetting to zero. May remove value and just operate from the key\n\n  let [quanity, setQuanity] = useState(1);\n  const {\n    name,\n    sku,\n    price,\n    color,\n    src\n  } = props.items.find(product => product.key === props.selectedProduct);\n  modal.dataset.toggled = toggled;\n  return modal ? (ReactDOM.createPortal(React.createElement(\"div\", {\n    className: \"product-modal\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"product-modal-close fas fa-times\",\n    onClick: () => handleModal(null),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    style: {\n      background: `url(${src}) no-repeat center / 80%`\n    },\n    className: \"product-modal-img\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"product-modal-overview\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: \"product-modal-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, name), React.createElement(\"p\", {\n    className: \"product-modal-sku\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"SKU: \", sku), React.createElement(\"p\", {\n    className: \"product-modal-price\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"$\", price, \".00\"), React.createElement(\"span\", {\n    className: \"product-modal-details\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \"View Full Details\"), React.createElement(\"p\", {\n    className: \"product-modal-colorText\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"Color: \", color), React.createElement(\"p\", {\n    className: \"product-modal-color\",\n    style: {\n      background: color\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"product-modal-quanity\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    className: \"quanity-label\",\n    htmlFor: \"quanity-input\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \"Quanity\"), React.createElement(\"div\", {\n    className: \"quanity-input\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    readOnly: true,\n    type: \"number\",\n    id: \"quanity-input\",\n    name: \"quanity-input\",\n    min: \"1\",\n    max: \"99\",\n    value: quanity,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"quanity-controls\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    onClick: () => setQuanity(++quanity),\n    className: \"fas fa-chevron-up\",\n    id: \"quanity-up\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    \"data-action-block\": quanity <= 1 ? true : false,\n    onClick: () => quanity <= 1 ? quanity : setQuanity(--quanity),\n    className: \"fas fa-chevron-down\",\n    id: \"quanity-down\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  })))), React.createElement(\"button\", {\n    onClick: () => {\n      addProduct([...product, {\n        item: name,\n        quanity\n      }]);\n      handleModal(null);\n    },\n    className: \"product-modal-addToCart defaultButton alt-button\",\n    type: \"button\",\n    value: sku,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, \"Add To Cart\")))), location) : null;\n}\n\nexport default ProductModal; // onClick={() => addProduct([...product, name])}","map":{"version":3,"sources":["E:/React_Projects/e-commerce_bicycle/src/components/modals/ProductModal.js"],"names":["React","useState","ReactDOM","useLocalStorage","ModalContext","App","location","document","querySelector","ProductModal","props","console","log","toggled","handleModal","modal","useContext","product","addProduct","quanity","setQuanity","name","sku","price","color","src","items","find","key","selectedProduct","dataset","createPortal","background","item"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport useLocalStorage from '../custom_hooks/useLocalStorage';\r\nimport { ModalContext } from './modalContext';\r\nimport '../../layout/ProductModal.css';\r\n\r\nimport App from './../../App';\r\n\r\nconst location = document.querySelector('#root-product-modal');\r\n// Instead of sending the count to the cart modal, send the product to the cart modal and let that component handle it's own state count\r\nfunction ProductModal(props) {\r\n  console.log('ran');\r\n  const { toggled, handleModal, modal } = React.useContext(ModalContext);\r\n  const [product, addProduct] = useLocalStorage('selected-products', []); // <-- value keeps resetting to zero. May remove value and just operate from the key\r\n  let [quanity, setQuanity] = useState(1);\r\n\r\n  const { name, sku, price, color, src } = props.items.find(\r\n    (product) => product.key === props.selectedProduct\r\n  );\r\n\r\n  modal.dataset.toggled = toggled;\r\n\r\n  return modal\r\n    ? (ReactDOM.createPortal(\r\n        <div className=\"product-modal\">\r\n          <button\r\n            className=\"product-modal-close fas fa-times\"\r\n            onClick={() => handleModal(null)}\r\n          ></button>\r\n          <div\r\n            style={{ background: `url(${src}) no-repeat center / 80%` }}\r\n            className=\"product-modal-img\"\r\n          ></div>\r\n          <div className=\"product-modal-overview\">\r\n            <h1 className=\"product-modal-title\">{name}</h1>\r\n            <p className=\"product-modal-sku\">SKU: {sku}</p>\r\n            <p className=\"product-modal-price\">${price}.00</p>\r\n            <span className=\"product-modal-details\">View Full Details</span>\r\n            <p className=\"product-modal-colorText\">Color: {color}</p>\r\n            <p\r\n              className=\"product-modal-color\"\r\n              style={{ background: color }}\r\n            ></p>\r\n            <div className=\"product-modal-quanity\">\r\n              <label className=\"quanity-label\" htmlFor=\"quanity-input\">\r\n                Quanity\r\n              </label>\r\n              <div className=\"quanity-input\">\r\n                <input\r\n                  readOnly\r\n                  type=\"number\"\r\n                  id=\"quanity-input\"\r\n                  name=\"quanity-input\"\r\n                  min=\"1\"\r\n                  max=\"99\"\r\n                  value={quanity}\r\n                />\r\n                <div className=\"quanity-controls\">\r\n                  <span\r\n                    onClick={() => setQuanity(++quanity)}\r\n                    className=\"fas fa-chevron-up\"\r\n                    id=\"quanity-up\"\r\n                  ></span>\r\n                  <span\r\n                    data-action-block={quanity <= 1 ? true : false}\r\n                    onClick={() =>\r\n                      quanity <= 1 ? quanity : setQuanity(--quanity)\r\n                    }\r\n                    className=\"fas fa-chevron-down\"\r\n                    id=\"quanity-down\"\r\n                  ></span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <button\r\n              onClick={() => {\r\n                addProduct([...product, { item: name, quanity }]);\r\n                handleModal(null);\r\n              }}\r\n              className=\"product-modal-addToCart defaultButton alt-button\"\r\n              type=\"button\"\r\n              value={sku}\r\n            >\r\n              Add To Cart\r\n            </button>\r\n          </div>\r\n        </div>\r\n      ),\r\n      location)\r\n    : null;\r\n}\r\nexport default ProductModal;\r\n\r\n// onClick={() => addProduct([...product, name])}\r\n"]},"metadata":{},"sourceType":"module"}