{"ast":null,"code":"import { useCallback, useState } from 'react';\n\nconst useArray = (initial, range) => {\n  const [value, setValue] = useState(initial);\n  const [priceRange, updatedRange] = useState(range);\n  console.log(value);\n  return {\n    value,\n    setValue,\n    filterByPrice: useCallback(() => setValue(arr => arr.filter(v => v.price >= priceRange)), [v]),\n    filterByColor: useCallback(c => setValue(arr => arr.filter(v => v.color === c)), []),\n    sortAscending: () => setValue(arr => arr.sort((a, b) => a.price - b.price))\n  };\n};\n\nexport default useArray; // useEffect(() => {\n//   async function DatatoFilter() {\n//     let data = props.results;\n//     if (props.loading) {\n//       return;\n//     }\n//     try {\n//       data\n//         .filter(product => product.price - product.sale >= props.min.price)\n//         .map(product => console.log(product));\n//     } catch (error) {\n//       console.log(error);\n//     }\n//   }\n//   DatatoFilter();\n// }, [props]);","map":{"version":3,"sources":["E:/React_Projects/e-commerce_bicycle/src/components/useArray.js"],"names":["useCallback","useState","useArray","initial","range","value","setValue","priceRange","updatedRange","console","log","filterByPrice","arr","filter","v","price","filterByColor","c","color","sortAscending","sort","a","b"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,QAAtB,QAAsC,OAAtC;;AAEA,MAAMC,QAAQ,GAAG,CAACC,OAAD,EAAUC,KAAV,KAAoB;AACnC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAACE,OAAD,CAAlC;AACA,QAAM,CAACI,UAAD,EAAaC,YAAb,IAA6BP,QAAQ,CAACG,KAAD,CAA3C;AAEAK,EAAAA,OAAO,CAACC,GAAR,CAAYL,KAAZ;AACA,SAAO;AACLA,IAAAA,KADK;AAELC,IAAAA,QAFK;AAGLK,IAAAA,aAAa,EAAEX,WAAW,CACxB,MAAMM,QAAQ,CAACM,GAAG,IAAIA,GAAG,CAACC,MAAJ,CAAWC,CAAC,IAAIA,CAAC,CAACC,KAAF,IAAWR,UAA3B,CAAR,CADU,EAExB,CAACO,CAAD,CAFwB,CAHrB;AAOLE,IAAAA,aAAa,EAAEhB,WAAW,CACxBiB,CAAC,IAAIX,QAAQ,CAACM,GAAG,IAAIA,GAAG,CAACC,MAAJ,CAAWC,CAAC,IAAIA,CAAC,CAACI,KAAF,KAAYD,CAA5B,CAAR,CADW,EAExB,EAFwB,CAPrB;AAWLE,IAAAA,aAAa,EAAE,MAAMb,QAAQ,CAACM,GAAG,IAAIA,GAAG,CAACQ,IAAJ,CAAS,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACN,KAAF,GAAUO,CAAC,CAACP,KAA/B,CAAR;AAXxB,GAAP;AAaD,CAlBD;;AAmBA,eAAeb,QAAf,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import { useCallback, useState } from 'react';\r\n\r\nconst useArray = (initial, range) => {\r\n  const [value, setValue] = useState(initial);\r\n  const [priceRange, updatedRange] = useState(range);\r\n\r\n  console.log(value);\r\n  return {\r\n    value,\r\n    setValue,\r\n    filterByPrice: useCallback(\r\n      () => setValue(arr => arr.filter(v => v.price >= priceRange)),\r\n      [v]\r\n    ),\r\n    filterByColor: useCallback(\r\n      c => setValue(arr => arr.filter(v => v.color === c)),\r\n      []\r\n    ),\r\n    sortAscending: () => setValue(arr => arr.sort((a, b) => a.price - b.price))\r\n  };\r\n};\r\nexport default useArray;\r\n\r\n// useEffect(() => {\r\n//   async function DatatoFilter() {\r\n//     let data = props.results;\r\n//     if (props.loading) {\r\n//       return;\r\n//     }\r\n//     try {\r\n//       data\r\n//         .filter(product => product.price - product.sale >= props.min.price)\r\n//         .map(product => console.log(product));\r\n//     } catch (error) {\r\n//       console.log(error);\r\n//     }\r\n//   }\r\n//   DatatoFilter();\r\n// }, [props]);\r\n"]},"metadata":{},"sourceType":"module"}