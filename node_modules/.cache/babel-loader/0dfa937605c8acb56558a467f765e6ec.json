{"ast":null,"code":"var _jsxFileName = \"E:\\\\React_Projects\\\\e-commerce_bicycle\\\\src\\\\components\\\\modals\\\\ProductModal.js\";\nimport React, { useState } from 'react';\nimport Modal from './Modal';\nimport '../../layout/ProductModal.css';\nimport { CartContext } from './cartContext';\nconst location = document.querySelector('#root-product-modal'); // Instead of sending the count to the cart modal, send the product to the cart modal and let that component handle it's own state count\n\nfunction ProductModal(props) {\n  const {\n    product,\n    addProduct\n  } = React.useContext(CartContext); // <-- value keeps resetting to zero. May remove value and just operate from the key\n\n  let [quanity, setQuanity] = useState(1);\n  const {\n    name,\n    sku,\n    price,\n    color,\n    src\n  } = props.items.find(product => product.key === props.selectedProduct);\n  console.log(product);\n  location.dataset.toggled = props.toggled;\n  return React.createElement(Modal, {\n    location: location,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"product-modal\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"product-modal-close fas fa-times\",\n    onClick: () => props.close(true),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    style: {\n      background: `url(${src}) no-repeat center / 80%`\n    },\n    className: \"product-modal-img\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"product-modal-overview\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: \"product-modal-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, name), React.createElement(\"p\", {\n    className: \"product-modal-sku\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"SKU: \", sku), React.createElement(\"p\", {\n    className: \"product-modal-price\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, \"$\", price, \".00\"), React.createElement(\"span\", {\n    className: \"product-modal-details\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"View Full Details\"), React.createElement(\"p\", {\n    className: \"product-modal-colorText\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"Color: \", color), React.createElement(\"p\", {\n    className: \"product-modal-color\",\n    style: {\n      background: color\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"product-modal-quanity\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    className: \"quanity-label\",\n    htmlFor: \"quanity-input\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"Quanity\"), React.createElement(\"div\", {\n    className: \"quanity-input\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    readOnly: true,\n    type: \"number\",\n    id: \"quanity-input\",\n    name: \"quanity-input\",\n    min: \"1\",\n    max: \"99\",\n    value: quanity,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"quanity-controls\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    onClick: () => setQuanity(++quanity),\n    className: \"fas fa-chevron-up\",\n    id: \"quanity-up\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    \"data-action-block\": quanity <= 1 ? true : false,\n    onClick: () => quanity <= 1 ? quanity : setQuanity(--quanity),\n    className: \"fas fa-chevron-down\",\n    id: \"quanity-down\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  })))), React.createElement(\"button\", {\n    onClick: () => addProduct([...product, {\n      item: sku,\n      quanity\n    }]),\n    className: \"product-modal-addToCart defaultButton alt-button\",\n    type: \"button\",\n    value: sku,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, \"Add To Cart\"))));\n}\n\nexport default ProductModal; // onClick={() => addProduct([...product, name])}","map":{"version":3,"sources":["E:/React_Projects/e-commerce_bicycle/src/components/modals/ProductModal.js"],"names":["React","useState","Modal","CartContext","location","document","querySelector","ProductModal","props","product","addProduct","useContext","quanity","setQuanity","name","sku","price","color","src","items","find","key","selectedProduct","console","log","dataset","toggled","close","background","item"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport Modal from './Modal';\r\nimport '../../layout/ProductModal.css';\r\nimport { CartContext } from './cartContext';\r\n\r\nconst location = document.querySelector('#root-product-modal');\r\n// Instead of sending the count to the cart modal, send the product to the cart modal and let that component handle it's own state count\r\nfunction ProductModal(props) {\r\n  const { product, addProduct } = React.useContext(CartContext); // <-- value keeps resetting to zero. May remove value and just operate from the key\r\n  let [quanity, setQuanity] = useState(1);\r\n\r\n  const { name, sku, price, color, src } = props.items.find(\r\n    (product) => product.key === props.selectedProduct\r\n  );\r\n  console.log(product);\r\n  location.dataset.toggled = props.toggled;\r\n\r\n  return (\r\n    <Modal location={location}>\r\n      <div className=\"product-modal\">\r\n        <button\r\n          className=\"product-modal-close fas fa-times\"\r\n          onClick={() => props.close(true)}\r\n        ></button>\r\n        <div\r\n          style={{ background: `url(${src}) no-repeat center / 80%` }}\r\n          className=\"product-modal-img\"\r\n        ></div>\r\n        <div className=\"product-modal-overview\">\r\n          <h1 className=\"product-modal-title\">{name}</h1>\r\n          <p className=\"product-modal-sku\">SKU: {sku}</p>\r\n          <p className=\"product-modal-price\">${price}.00</p>\r\n          <span className=\"product-modal-details\">View Full Details</span>\r\n          <p className=\"product-modal-colorText\">Color: {color}</p>\r\n          <p className=\"product-modal-color\" style={{ background: color }}></p>\r\n          <div className=\"product-modal-quanity\">\r\n            <label className=\"quanity-label\" htmlFor=\"quanity-input\">\r\n              Quanity\r\n            </label>\r\n            <div className=\"quanity-input\">\r\n              <input\r\n                readOnly\r\n                type=\"number\"\r\n                id=\"quanity-input\"\r\n                name=\"quanity-input\"\r\n                min=\"1\"\r\n                max=\"99\"\r\n                value={quanity}\r\n              />\r\n              <div className=\"quanity-controls\">\r\n                <span\r\n                  onClick={() => setQuanity(++quanity)}\r\n                  className=\"fas fa-chevron-up\"\r\n                  id=\"quanity-up\"\r\n                ></span>\r\n                <span\r\n                  data-action-block={quanity <= 1 ? true : false}\r\n                  onClick={() =>\r\n                    quanity <= 1 ? quanity : setQuanity(--quanity)\r\n                  }\r\n                  className=\"fas fa-chevron-down\"\r\n                  id=\"quanity-down\"\r\n                ></span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <button\r\n            onClick={() => addProduct([...product, { item: sku, quanity }])}\r\n            className=\"product-modal-addToCart defaultButton alt-button\"\r\n            type=\"button\"\r\n            value={sku}\r\n          >\r\n            Add To Cart\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </Modal>\r\n  );\r\n}\r\nexport default ProductModal;\r\n\r\n// onClick={() => addProduct([...product, name])}\r\n"]},"metadata":{},"sourceType":"module"}