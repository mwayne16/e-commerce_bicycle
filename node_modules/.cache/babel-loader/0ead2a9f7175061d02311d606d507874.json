{"ast":null,"code":"var _jsxFileName = \"E:\\\\React_Projects\\\\e-commerce_bicycle\\\\src\\\\components\\\\HOC.js\";\nimport React, { useState, useEffect } from 'react';\n\nconst Rainbow = WrappedComponent => {\n  const colors = ['red', 'pink', 'orange', 'blue', 'green', 'yellow'];\n  const randomColor = colors[Math.floor(Math.random() * colors.length)];\n  const className = `${randomColor}-text`;\n  return props => React.createElement(\"div\", {\n    className: className,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, React.createElement(WrappedComponent, Object.assign({}, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  })));\n};\n\nexport default Rainbow; // const withCurrentUser = Component => {\n//   const NewComponent = props => {\n//     const [user, setUser] = useState(null);\n//     useEffect(() => {\n//       return () => {};\n//     }, []);\n//     return <Component {...props} />;\n//   };\n//   return NewComponent;\n// };\n// export default withCurrentUser;","map":{"version":3,"sources":["E:/React_Projects/e-commerce_bicycle/src/components/HOC.js"],"names":["React","useState","useEffect","Rainbow","WrappedComponent","colors","randomColor","Math","floor","random","length","className","props"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;AAEA,MAAMC,OAAO,GAAGC,gBAAgB,IAAI;AAClC,QAAMC,MAAM,GAAG,CAAC,KAAD,EAAQ,MAAR,EAAgB,QAAhB,EAA0B,MAA1B,EAAkC,OAAlC,EAA2C,QAA3C,CAAf;AACA,QAAMC,WAAW,GAAGD,MAAM,CAACE,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBJ,MAAM,CAACK,MAAlC,CAAD,CAA1B;AACA,QAAMC,SAAS,GAAI,GAAEL,WAAY,OAAjC;AACA,SAAOM,KAAK,IACV;AAAK,IAAA,SAAS,EAAED,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,gBAAD,oBAAsBC,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,CADF;AAKD,CATD;;AAUA,eAAeT,OAAf,C,CACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst Rainbow = WrappedComponent => {\r\n  const colors = ['red', 'pink', 'orange', 'blue', 'green', 'yellow'];\r\n  const randomColor = colors[Math.floor(Math.random() * colors.length)];\r\n  const className = `${randomColor}-text`;\r\n  return props => (\r\n    <div className={className}>\r\n      <WrappedComponent {...props} />\r\n    </div>\r\n  );\r\n};\r\nexport default Rainbow;\r\n// const withCurrentUser = Component => {\r\n//   const NewComponent = props => {\r\n//     const [user, setUser] = useState(null);\r\n//     useEffect(() => {\r\n\r\n//       return () => {};\r\n//     }, []);\r\n//     return <Component {...props} />;\r\n//   };\r\n//   return NewComponent;\r\n// };\r\n\r\n// export default withCurrentUser;\r\n"]},"metadata":{},"sourceType":"module"}