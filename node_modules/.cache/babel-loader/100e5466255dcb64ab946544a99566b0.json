{"ast":null,"code":"var _jsxFileName = \"E:\\\\React_Projects\\\\e-commerce_bicycle\\\\src\\\\components\\\\Filters.js\";\nimport React, { useRef, useState, useEffect, useContext } from 'react';\nimport { ProductContext } from '../layout/Shop';\nimport Data from './data/ProductData';\n\nfunction Slider() {\n  const {\n    product,\n    dispatch\n  } = useContext(ProductContext);\n  const [range, changedRange] = useState(min);\n  useEffect(() => {\n    return () => {\n      const filter = arr => arr.filter(product => product.price >= range);\n\n      dispatch({\n        type: 'filterByPrice',\n        payload: filter(product.items)\n      });\n    };\n  }, [dispatch]);\n  return React.createElement(React.Fragment, null, React.createElement(\"input\", {\n    onChange: e => changedRange(e.target.value),\n    type: \"range\",\n    min: 0,\n    max: 620,\n    step: \"5\",\n    defaultValue: 0,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    \"data-current-price\": true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, '$' + 620), React.createElement(\"p\", {\n    \"data-max-range\": true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, 620));\n}\n\nfunction ColorSelector(props) {\n  const [color, newColor] = useState('');\n  const data = [1, 2, 3, 4, 5, 6];\n  data.map(products => products).filter(product => product.color === color);\n  return React.createElement(React.Fragment, null, React.createElement(\"li\", {\n    \"data-color\": \"black\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }), React.createElement(\"li\", {\n    \"data-color\": \"blue\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }), React.createElement(\"li\", {\n    \"data-color\": \"green\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }), React.createElement(\"li\", {\n    \"data-color\": \"red\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }), React.createElement(\"li\", {\n    \"data-color\": \"white\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }));\n}\n\nfunction SortProductsCard() {\n  const sortMethod = e => {};\n\n  return React.createElement(\"div\", {\n    className: \"sort-products\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"product-sorter\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, \"Sort by\"), React.createElement(\"select\", {\n    onChange: sortMethod,\n    id: \"sort\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    value: \"newest\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \"Newest\"), React.createElement(\"option\", {\n    value: \"pricelth\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, \"Price (low to high)\"), React.createElement(\"option\", {\n    value: \"pricehtl\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, \"Price (high to low)\"), React.createElement(\"option\", {\n    value: \"nameaz\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \"Name A-Z\"), React.createElement(\"option\", {\n    value: \"nameza\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, \"Name Z-A\")));\n}\n\nexport { Slider, ColorSelector, SortProductsCard }; // const {\n//   count: [count, setCount]\n// } = {\n//   count: useState(0),\n//   ...(props.state || {})\n// };\n// const sorted = product.items.sort((a, b) => a.price - b.price);\n// let min = sorted[0].price;\n// let max = sorted[sorted.length - 1].price;","map":{"version":3,"sources":["E:/React_Projects/e-commerce_bicycle/src/components/Filters.js"],"names":["React","useRef","useState","useEffect","useContext","ProductContext","Data","Slider","product","dispatch","range","changedRange","min","filter","arr","price","type","payload","items","e","target","value","ColorSelector","props","color","newColor","data","map","products","SortProductsCard","sortMethod"],"mappings":"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","sourcesContent":["import React, { useRef, useState, useEffect, useContext } from 'react';\r\nimport { ProductContext } from '../layout/Shop';\r\nimport Data from './data/ProductData';\r\nfunction Slider() {\r\n  const { product, dispatch } = useContext(ProductContext);\r\n\r\n  const [range, changedRange] = useState(min);\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      const filter = arr => arr.filter(product => product.price >= range);\r\n      dispatch({ type: 'filterByPrice', payload: filter(product.items) });\r\n    };\r\n  }, [dispatch]);\r\n  return (\r\n    <>\r\n      {/* <button onClick={() => setCount(count + 1)}>Increment Count</button> */}\r\n      <input\r\n        onChange={e => changedRange(e.target.value)}\r\n        type=\"range\"\r\n        min={0}\r\n        max={620}\r\n        step=\"5\"\r\n        defaultValue={0}\r\n      />\r\n      <p data-current-price>{'$' + 620}</p>\r\n      <p data-max-range>\r\n        {620}\r\n        {}\r\n      </p>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction ColorSelector(props) {\r\n  const [color, newColor] = useState('');\r\n  const data = [1, 2, 3, 4, 5, 6];\r\n  data.map(products => products).filter(product => product.color === color);\r\n  return (\r\n    <>\r\n      <li data-color=\"black\"></li>\r\n      <li data-color=\"blue\"></li>\r\n      <li data-color=\"green\"></li>\r\n      <li data-color=\"red\"></li>\r\n      <li data-color=\"white\"></li>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction SortProductsCard() {\r\n  const sortMethod = e => {};\r\n  return (\r\n    <div className=\"sort-products\">\r\n      <label htmlFor=\"product-sorter\">Sort by</label>\r\n      <select onChange={sortMethod} id=\"sort\">\r\n        <option value=\"newest\">Newest</option>\r\n        <option value=\"pricelth\">Price (low to high)</option>\r\n        <option value=\"pricehtl\">Price (high to low)</option>\r\n        <option value=\"nameaz\">Name A-Z</option>\r\n        <option value=\"nameza\">Name Z-A</option>\r\n      </select>\r\n    </div>\r\n  );\r\n}\r\nexport { Slider, ColorSelector, SortProductsCard };\r\n\r\n// const {\r\n//   count: [count, setCount]\r\n// } = {\r\n//   count: useState(0),\r\n//   ...(props.state || {})\r\n// };\r\n\r\n// const sorted = product.items.sort((a, b) => a.price - b.price);\r\n// let min = sorted[0].price;\r\n// let max = sorted[sorted.length - 1].price;\r\n"]},"metadata":{},"sourceType":"module"}