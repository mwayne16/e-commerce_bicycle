{"ast":null,"code":"var _jsxFileName = \"E:\\\\React_Projects\\\\e-commerce_bicycle\\\\src\\\\components\\\\context\\\\productContext.js\";\nimport React, { useReducer, useEffect } from 'react';\nimport { reducer, initialState } from '../../reducers/productReducer';\nimport useDataFetching from './../custom_hooks/useDataFetching';\nimport ReactLoading from 'react-loading'; // Try setting the useDataFetching hook here\n\nconst ProductContext = React.createContext(null);\nconst formatter = new Intl.NumberFormat('en-US', {\n  style: 'currency',\n  currency: 'USD',\n  minimumFractionDigits: 2\n});\n\nconst ProductProvider = props => {\n  const {\n    results,\n    loading\n  } = useDataFetching('/api/products');\n  useEffect(() => {\n    const fetchResults = () => {\n      results.map((product, index) => {\n        console.log(formatter.format(Number(product.price)));\n        return initialState.items.push(product);\n      });\n    };\n\n    fetchResults();\n  }, [results]);\n  const [products, dispatch] = useReducer(reducer, initialState);\n  return loading ? React.createElement(\"div\", {\n    style: {\n      position: 'fixed',\n      top: 'calc(50% - 50px)',\n      left: 'calc(50% - 50px)',\n      width: '100px',\n      height: '100px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(ReactLoading, {\n    type: 'bubbles',\n    color: '#294057',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  })) : React.createElement(ProductContext.Provider, {\n    value: {\n      products,\n      dispatch\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, props.children);\n};\n\nexport { ProductContext, ProductProvider };","map":{"version":3,"sources":["E:/React_Projects/e-commerce_bicycle/src/components/context/productContext.js"],"names":["React","useReducer","useEffect","reducer","initialState","useDataFetching","ReactLoading","ProductContext","createContext","formatter","Intl","NumberFormat","style","currency","minimumFractionDigits","ProductProvider","props","results","loading","fetchResults","map","product","index","console","log","format","Number","price","items","push","products","dispatch","position","top","left","width","height","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,QAA6C,OAA7C;AACA,SAASC,OAAT,EAAkBC,YAAlB,QAAsC,+BAAtC;AACA,OAAOC,eAAP,MAA4B,mCAA5B;AACA,OAAOC,YAAP,MAAyB,eAAzB,C,CACA;;AACA,MAAMC,cAAc,GAAGP,KAAK,CAACQ,aAAN,CAAoB,IAApB,CAAvB;AACA,MAAMC,SAAS,GAAG,IAAIC,IAAI,CAACC,YAAT,CAAsB,OAAtB,EAA+B;AAC/CC,EAAAA,KAAK,EAAE,UADwC;AAE/CC,EAAAA,QAAQ,EAAE,KAFqC;AAG/CC,EAAAA,qBAAqB,EAAE;AAHwB,CAA/B,CAAlB;;AAKA,MAAMC,eAAe,GAAIC,KAAD,IAAW;AACjC,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAAuBb,eAAe,CAAC,eAAD,CAA5C;AACAH,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMiB,YAAY,GAAG,MAAM;AACzBF,MAAAA,OAAO,CAACG,GAAR,CAAY,CAACC,OAAD,EAAUC,KAAV,KAAoB;AAC9BC,QAAAA,OAAO,CAACC,GAAR,CAAYf,SAAS,CAACgB,MAAV,CAAiBC,MAAM,CAACL,OAAO,CAACM,KAAT,CAAvB,CAAZ;AACA,eAAOvB,YAAY,CAACwB,KAAb,CAAmBC,IAAnB,CAAwBR,OAAxB,CAAP;AACD,OAHD;AAID,KALD;;AAMAF,IAAAA,YAAY;AACb,GARQ,EAQN,CAACF,OAAD,CARM,CAAT;AASA,QAAM,CAACa,QAAD,EAAWC,QAAX,IAAuB9B,UAAU,CAACE,OAAD,EAAUC,YAAV,CAAvC;AACA,SAAOc,OAAO,GACZ;AACE,IAAA,KAAK,EAAE;AACLc,MAAAA,QAAQ,EAAE,OADL;AAELC,MAAAA,GAAG,EAAE,kBAFA;AAGLC,MAAAA,IAAI,EAAE,kBAHD;AAILC,MAAAA,KAAK,EAAE,OAJF;AAKLC,MAAAA,MAAM,EAAE;AALH,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASE,oBAAC,YAAD;AAAc,IAAA,IAAI,EAAE,SAApB;AAA+B,IAAA,KAAK,EAAE,SAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,CADY,GAaZ,oBAAC,cAAD,CAAgB,QAAhB;AAAyB,IAAA,KAAK,EAAE;AAAEN,MAAAA,QAAF;AAAYC,MAAAA;AAAZ,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGf,KAAK,CAACqB,QADT,CAbF;AAiBD,CA7BD;;AA8BA,SAAS9B,cAAT,EAAyBQ,eAAzB","sourcesContent":["import React, { useReducer, useEffect } from 'react';\r\nimport { reducer, initialState } from '../../reducers/productReducer';\r\nimport useDataFetching from './../custom_hooks/useDataFetching';\r\nimport ReactLoading from 'react-loading';\r\n// Try setting the useDataFetching hook here\r\nconst ProductContext = React.createContext(null);\r\nconst formatter = new Intl.NumberFormat('en-US', {\r\n  style: 'currency',\r\n  currency: 'USD',\r\n  minimumFractionDigits: 2,\r\n});\r\nconst ProductProvider = (props) => {\r\n  const { results, loading } = useDataFetching('/api/products');\r\n  useEffect(() => {\r\n    const fetchResults = () => {\r\n      results.map((product, index) => {\r\n        console.log(formatter.format(Number(product.price)));\r\n        return initialState.items.push(product);\r\n      });\r\n    };\r\n    fetchResults();\r\n  }, [results]);\r\n  const [products, dispatch] = useReducer(reducer, initialState);\r\n  return loading ? (\r\n    <div\r\n      style={{\r\n        position: 'fixed',\r\n        top: 'calc(50% - 50px)',\r\n        left: 'calc(50% - 50px)',\r\n        width: '100px',\r\n        height: '100px',\r\n      }}\r\n    >\r\n      <ReactLoading type={'bubbles'} color={'#294057'} />\r\n    </div>\r\n  ) : (\r\n    <ProductContext.Provider value={{ products, dispatch }}>\r\n      {props.children}\r\n    </ProductContext.Provider>\r\n  );\r\n};\r\nexport { ProductContext, ProductProvider };\r\n"]},"metadata":{},"sourceType":"module"}