{"ast":null,"code":"import axios from 'axios';\nimport { useEffect, useState } from 'react';\n\nfunction useDataFetching(dataSource) {\n  const [loading, setLoading] = useState(true);\n  const [results, setResults] = useState([]);\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const response = await axios.get(dataSource).then(() => setLoading(false));\n        setResults(response.data);\n      } catch (error) {\n        setLoading(false);\n        throw new Error(error);\n      }\n    }\n\n    fetchData();\n  }, [dataSource]);\n  return {\n    loading,\n    results\n  };\n}\n\nexport default useDataFetching; // function dataFetching(dataSource) {\n//   let results = [];\n//   let loading = true;\n//   axios\n//     .get(dataSource)\n//     .then((response) => {\n//       results.push(...response.data);\n//       loading = false;\n//       console.log(loading);\n//     })\n//     .catch((error) => {\n//       throw new Error(error);\n//     });\n//   return {\n//     results,\n//     loading,\n//   };\n// }\n//     try {\n//       const data = await fetch(dataSource);\n//       const json = await data.json();\n//       if (json) {\n//         setLoading(false);\n//         setResults(json);\n//       }\n//     } catch (error) {\n//       setLoading(false);\n//     }\n//     setLoading(false);\n//   }\n//   fetchData();\n// }, [dataSource]);\n// return {\n//   loading,\n//   results\n// };","map":{"version":3,"sources":["E:/React_Projects/e-commerce_bicycle/src/components/custom_hooks/useDataFetching.js"],"names":["axios","useEffect","useState","useDataFetching","dataSource","loading","setLoading","results","setResults","fetchData","response","get","then","data","error","Error"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;AACA,SAASC,eAAT,CAAyBC,UAAzB,EAAqC;AACnC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBJ,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACK,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,EAAD,CAAtC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAeQ,SAAf,GAA2B;AACzB,UAAI;AACF,cAAMC,QAAQ,GAAG,MAAMV,KAAK,CACzBW,GADoB,CAChBP,UADgB,EAEpBQ,IAFoB,CAEf,MAAMN,UAAU,CAAC,KAAD,CAFD,CAAvB;AAGAE,QAAAA,UAAU,CAACE,QAAQ,CAACG,IAAV,CAAV;AACD,OALD,CAKE,OAAOC,KAAP,EAAc;AACdR,QAAAA,UAAU,CAAC,KAAD,CAAV;AACA,cAAM,IAAIS,KAAJ,CAAUD,KAAV,CAAN;AACD;AACF;;AACDL,IAAAA,SAAS;AACV,GAbQ,EAaN,CAACL,UAAD,CAbM,CAAT;AAcA,SAAO;AACLC,IAAAA,OADK;AAELE,IAAAA;AAFK,GAAP;AAID;;AACD,eAAeJ,eAAf,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA","sourcesContent":["import axios from 'axios';\r\nimport { useEffect, useState } from 'react';\r\nfunction useDataFetching(dataSource) {\r\n  const [loading, setLoading] = useState(true);\r\n  const [results, setResults] = useState([]);\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      try {\r\n        const response = await axios\r\n          .get(dataSource)\r\n          .then(() => setLoading(false));\r\n        setResults(response.data);\r\n      } catch (error) {\r\n        setLoading(false);\r\n        throw new Error(error);\r\n      }\r\n    }\r\n    fetchData();\r\n  }, [dataSource]);\r\n  return {\r\n    loading,\r\n    results,\r\n  };\r\n}\r\nexport default useDataFetching;\r\n\r\n// function dataFetching(dataSource) {\r\n//   let results = [];\r\n//   let loading = true;\r\n//   axios\r\n//     .get(dataSource)\r\n//     .then((response) => {\r\n//       results.push(...response.data);\r\n//       loading = false;\r\n//       console.log(loading);\r\n//     })\r\n//     .catch((error) => {\r\n//       throw new Error(error);\r\n//     });\r\n\r\n//   return {\r\n//     results,\r\n//     loading,\r\n//   };\r\n// }\r\n\r\n//     try {\r\n//       const data = await fetch(dataSource);\r\n//       const json = await data.json();\r\n\r\n//       if (json) {\r\n//         setLoading(false);\r\n//         setResults(json);\r\n//       }\r\n//     } catch (error) {\r\n//       setLoading(false);\r\n//     }\r\n\r\n//     setLoading(false);\r\n//   }\r\n\r\n//   fetchData();\r\n// }, [dataSource]);\r\n\r\n// return {\r\n//   loading,\r\n//   results\r\n// };\r\n"]},"metadata":{},"sourceType":"module"}