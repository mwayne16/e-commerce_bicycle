{"ast":null,"code":"import axios from 'axios';\n\nfunction dataFetching(dataSource) {\n  let results;\n\n  async function fetchData() {\n    try {\n      const response = await axios.get(dataSource);\n      let results = response.data;\n      console.log(results);\n    } catch (error) {\n      throw new Error(error);\n    }\n  }\n\n  fetchData();\n  return {\n    results\n  };\n}\n\nconst results = dataFetching('https://raw.githubusercontent.com/mwayne16/e-commerce_bicycle/master/src/components/data/application.json');\nconsole.log(results);\nexport default dataFetching; // function useDataFetching(dataSource) {\n//   const [loading, setLoading] = useState(true);\n//   const [results, setResults] = useState([]);\n//   useEffect(() => {\n//     async function fetchData() {\n//       try {\n//         const response = await axios.get(dataSource);\n//         setResults(response.data);\n//         setLoading(false);\n//       } catch (error) {\n//         setLoading(false);\n//         throw new Error(error);\n//       }\n//     }\n//     fetchData();\n//   }, [dataSource]);\n//   return {\n//     loading,\n//     results\n//   };\n// }\n//     try {\n//       const data = await fetch(dataSource);\n//       const json = await data.json();\n//       if (json) {\n//         setLoading(false);\n//         setResults(json);\n//       }\n//     } catch (error) {\n//       setLoading(false);\n//     }\n//     setLoading(false);\n//   }\n//   fetchData();\n// }, [dataSource]);\n// return {\n//   loading,\n//   results\n// };","map":{"version":3,"sources":["E:/React_Projects/e-commerce_bicycle/src/components/custom_hooks/dataFetching.js"],"names":["axios","dataFetching","dataSource","results","fetchData","response","get","data","console","log","error","Error"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AACA,SAASC,YAAT,CAAsBC,UAAtB,EAAkC;AAChC,MAAIC,OAAJ;;AAEA,iBAAeC,SAAf,GAA2B;AACzB,QAAI;AACF,YAAMC,QAAQ,GAAG,MAAML,KAAK,CAACM,GAAN,CAAUJ,UAAV,CAAvB;AAEA,UAAIC,OAAO,GAAGE,QAAQ,CAACE,IAAvB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYN,OAAZ;AACD,KALD,CAKE,OAAOO,KAAP,EAAc;AACd,YAAM,IAAIC,KAAJ,CAAUD,KAAV,CAAN;AACD;AACF;;AACDN,EAAAA,SAAS;AAET,SAAO;AACLD,IAAAA;AADK,GAAP;AAGD;;AAED,MAAMA,OAAO,GAAGF,YAAY,CAC1B,2GAD0B,CAA5B;AAGAO,OAAO,CAACC,GAAR,CAAYN,OAAZ;AACA,eAAeF,YAAf,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA","sourcesContent":["import axios from 'axios';\r\nfunction dataFetching(dataSource) {\r\n  let results;\r\n\r\n  async function fetchData() {\r\n    try {\r\n      const response = await axios.get(dataSource);\r\n\r\n      let results = response.data;\r\n      console.log(results);\r\n    } catch (error) {\r\n      throw new Error(error);\r\n    }\r\n  }\r\n  fetchData();\r\n\r\n  return {\r\n    results,\r\n  };\r\n}\r\n\r\nconst results = dataFetching(\r\n  'https://raw.githubusercontent.com/mwayne16/e-commerce_bicycle/master/src/components/data/application.json'\r\n);\r\nconsole.log(results);\r\nexport default dataFetching;\r\n\r\n// function useDataFetching(dataSource) {\r\n//   const [loading, setLoading] = useState(true);\r\n//   const [results, setResults] = useState([]);\r\n//   useEffect(() => {\r\n//     async function fetchData() {\r\n//       try {\r\n//         const response = await axios.get(dataSource);\r\n\r\n//         setResults(response.data);\r\n//         setLoading(false);\r\n//       } catch (error) {\r\n//         setLoading(false);\r\n//         throw new Error(error);\r\n//       }\r\n//     }\r\n//     fetchData();\r\n//   }, [dataSource]);\r\n//   return {\r\n//     loading,\r\n//     results\r\n//   };\r\n// }\r\n//     try {\r\n//       const data = await fetch(dataSource);\r\n//       const json = await data.json();\r\n\r\n//       if (json) {\r\n//         setLoading(false);\r\n//         setResults(json);\r\n//       }\r\n//     } catch (error) {\r\n//       setLoading(false);\r\n//     }\r\n\r\n//     setLoading(false);\r\n//   }\r\n\r\n//   fetchData();\r\n// }, [dataSource]);\r\n\r\n// return {\r\n//   loading,\r\n//   results\r\n// };\r\n"]},"metadata":{},"sourceType":"module"}