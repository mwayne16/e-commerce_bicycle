{"ast":null,"code":"var _jsxFileName = \"E:\\\\React_Projects\\\\e-commerce_bicycle\\\\src\\\\components\\\\modals\\\\cartContext.js\";\nimport React from 'react';\nimport useLocalStorage from '../custom_hooks/useLocalStorage';\nconst CartItemsContext = React.createContext();\n\nconst CartProvider = props => {\n  const [products, setProduct] = useLocalStorage('selected-products', []);\n  let prices = []; // const prices = products.map((product) =>\n  //   val.push(product.price * product.quanity)\n  // );\n\n  const subTotal = products.map(product => {\n    prices.push(product.price * product.quanity);\n    return prices.reduce((acc, curr) => acc + curr);\n  });\n  console.log(subTotal);\n  return React.createElement(CartItemsContext.Provider, {\n    value: {\n      products,\n      setProduct\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, props.children);\n};\n\nexport { CartItemsContext, CartProvider }; // const subTotal = product.reduce(\n//   (acc, curr) => acc.price * acc.quanity + curr.price * curr.quanity\n// );","map":{"version":3,"sources":["E:/React_Projects/e-commerce_bicycle/src/components/modals/cartContext.js"],"names":["React","useLocalStorage","CartItemsContext","createContext","CartProvider","props","products","setProduct","prices","subTotal","map","product","push","price","quanity","reduce","acc","curr","console","log","children"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,eAAP,MAA4B,iCAA5B;AAEA,MAAMC,gBAAgB,GAAGF,KAAK,CAACG,aAAN,EAAzB;;AACA,MAAMC,YAAY,GAAIC,KAAD,IAAW;AAC9B,QAAM,CAACC,QAAD,EAAWC,UAAX,IAAyBN,eAAe,CAAC,mBAAD,EAAsB,EAAtB,CAA9C;AACA,MAAIO,MAAM,GAAG,EAAb,CAF8B,CAG9B;AACA;AACA;;AAEA,QAAMC,QAAQ,GAAGH,QAAQ,CAACI,GAAT,CAAcC,OAAD,IAAa;AACzCH,IAAAA,MAAM,CAACI,IAAP,CAAYD,OAAO,CAACE,KAAR,GAAgBF,OAAO,CAACG,OAApC;AACA,WAAON,MAAM,CAACO,MAAP,CAAc,CAACC,GAAD,EAAMC,IAAN,KAAeD,GAAG,GAAGC,IAAnC,CAAP;AACD,GAHgB,CAAjB;AAIAC,EAAAA,OAAO,CAACC,GAAR,CAAYV,QAAZ;AACA,SACE,oBAAC,gBAAD,CAAkB,QAAlB;AAA2B,IAAA,KAAK,EAAE;AAAEH,MAAAA,QAAF;AAAYC,MAAAA;AAAZ,KAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,KAAK,CAACe,QADT,CADF;AAKD,CAjBD;;AAmBA,SAASlB,gBAAT,EAA2BE,YAA3B,G,CAEA;AACA;AACA","sourcesContent":["import React from 'react';\r\nimport useLocalStorage from '../custom_hooks/useLocalStorage';\r\n\r\nconst CartItemsContext = React.createContext();\r\nconst CartProvider = (props) => {\r\n  const [products, setProduct] = useLocalStorage('selected-products', []);\r\n  let prices = [];\r\n  // const prices = products.map((product) =>\r\n  //   val.push(product.price * product.quanity)\r\n  // );\r\n\r\n  const subTotal = products.map((product) => {\r\n    prices.push(product.price * product.quanity);\r\n    return prices.reduce((acc, curr) => acc + curr);\r\n  });\r\n  console.log(subTotal);\r\n  return (\r\n    <CartItemsContext.Provider value={{ products, setProduct }}>\r\n      {props.children}\r\n    </CartItemsContext.Provider>\r\n  );\r\n};\r\n\r\nexport { CartItemsContext, CartProvider };\r\n\r\n// const subTotal = product.reduce(\r\n//   (acc, curr) => acc.price * acc.quanity + curr.price * curr.quanity\r\n// );\r\n"]},"metadata":{},"sourceType":"module"}