{"ast":null,"code":"var _jsxFileName = \"E:\\\\React_Projects\\\\e-commerce_bicycle\\\\src\\\\layout\\\\Shop.js\";\nimport React, { useState, useEffect, useReducer, useContext, useRef } from 'react';\nimport { Slider, ColorSelector, SortProductsCard } from '../components/Filters';\nimport { initialState, reducer } from '../reducers/productItems';\nimport useDataFetching from '../components/useDataFetching';\nimport './Shop.css';\nimport '../layout/ProductFilter.css';\nconst ProductContext = React.createContext(null); // Use Ref doesn't work, wont re-render DOM\n// useState likely will work but would require two seperate state calls\n// Having two useRef's for each filter element and then a useState toggle may work, but would then require three lines of code opposed to two.\n// Bring Price Slider and Color filter inside the filter type container, then just control height\n\nfunction FilterCard() {\n  const { ...props\n  } = useContext(ProductContext);\n  const [toggled, updateToggle] = useState({\n    price: true,\n    color: ''\n  });\n  return React.createElement(\"div\", {\n    className: \"product-filter\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(SortProductsCard, Object.assign({}, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"filter-options\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, \"Filter By\"), React.createElement(\"div\", {\n    \"data-is-toggled\": toggled.price,\n    className: \"filter-type\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"filter-type-header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, \"Price\"), React.createElement(\"span\", {\n    onClick: () => updateToggle({ ...toggled,\n      price: !toggled.price\n    }),\n    id: 'price-toggle',\n    className: `filter-toggle-action ${toggled.price ? 'fas fa-minus' : 'fas fa-plus'} `,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"filter-content\",\n    id: \"price-slider\",\n    \"data-is-toggled\": toggled.price,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, toggled.price && animEnd && React.createElement(Slider, Object.assign({}, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  })))), React.createElement(\"div\", {\n    \"data-is-toggled\": toggled.color,\n    className: \"filter-type\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"filter-type-header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \"Color\"), React.createElement(\"span\", {\n    onClick: () => updateToggle({ ...toggled,\n      color: !toggled.color\n    }),\n    id: \"color-toggle\",\n    className: `filter-toggle-action ${toggled.color ? 'fas fa-minus' : 'fas fa-plus'} `,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"filter-content\",\n    id: \"color-filter\",\n    \"data-is-toggled\": toggled.color,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(ColorSelector, Object.assign({}, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  })))))));\n}\n\nfunction Products(props) {\n  return React.createElement(\"div\", {\n    className: \"product-items-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, props.items.map(({\n    name,\n    key,\n    price,\n    released,\n    src\n  }) => React.createElement(\"li\", {\n    key: key,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    key: key,\n    className: \"product-item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: src,\n    alt: \"product1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    className: \"item-details\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    \"data-item-title\": name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, name), React.createElement(\"p\", {\n    \"data-item-price\": price,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, '$' + price)))))));\n}\n\nfunction ProductGalleryContainer() {\n  const [product, dispatch] = useReducer(reducer, initialState);\n  const [filter, setFilter] = useState(product.items);\n  useEffect(() => {\n    setFilter(product.filteredItems.length !== 0 ? product.filteredItems : product.items);\n  }, [product]);\n  return React.createElement(\"section\", {\n    className: \"product-gallery\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, React.createElement(ProductContext.Provider, {\n    value: {\n      product,\n      dispatch\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, React.createElement(FilterCard, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }), React.createElement(Products, {\n    items: filter,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  })));\n}\n\nfunction Shop(props) {\n  //------------------------FetchDataHook------------------//\n  // const { results, loading } = useDataFetching(\n  //   'https://raw.githubusercontent.com/mwayne16/e-commerce_bicycle/master/src/application.json'\n  // );\n  return React.createElement(\"section\", {\n    className: \"product-collection\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: \"collection-header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, \"Our Collection\"), React.createElement(ProductGalleryContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }));\n}\n\nexport { Shop, ProductContext }; // <li>\n// <div className=\"product-item\">\n//   <img\n//     src={require('../assets/images/product1.jpeg')}\n//     alt=\"product1\"\n//   />\n//   <span className=\"item-details\">\n//     <p data-item-title={props.name}>I'm a Product</p>\n//     <p data-item-price={props.price}>$180</p>\n//   </span>\n// </div>\n// </li>\n// <li>\n// <div className=\"product-item\">\n//   <img\n//     src={require('../assets/images/product1.jpeg')}\n//     alt=\"product1\"\n//   />\n//   <span className=\"item-details\">\n//     <p data-item-title={props.name}>I'm a Product</p>\n//     <p data-item-price={props.price}>$180</p>\n//   </span>\n// </div>\n// </li>\n// <li>\n// <div className=\"product-item\">\n//   <img\n//     src={require('../assets/images/product1.jpeg')}\n//     alt=\"product1\"\n//   />\n//   <span className=\"item-details\">\n//     <p data-item-title={props.name}>I'm a Product</p>\n//     <p data-item-price={props.price}>$180</p>\n//   </span>\n// </div>\n// </li>\n// <li>\n// <div className=\"product-item\">\n//   <img\n//     src={require('../assets/images/product1.jpeg')}\n//     alt=\"product1\"\n//   />\n//   <span className=\"item-details\">\n//     <p data-item-title={props.name}>I'm a Product</p>\n//     <p data-item-price={props.price}>$180</p>\n//   </span>\n// </div>\n// </li>\n// <li>\n// <div className=\"product-item\">\n//   <img\n//     src={require('../assets/images/product1.jpeg')}\n//     alt=\"product1\"\n//   />\n//   <span className=\"item-details\">\n//     <p data-item-title={props.name}>I'm a Product</p>\n//     <p data-item-price={props.price}>$180</p>\n//   </span>\n// </div>\n// </li>\n// <li>\n// <div className=\"product-item\">\n//   <img\n//     src={require('../assets/images/product1.jpeg')}\n//     alt=\"product1\"\n//   />\n//   <span className=\"item-details\">\n//     <p data-item-title={props.name}>I'm a Product</p>\n//     <p data-item-price={props.price}>$180</p>\n//   </span>\n// </div>\n// </li>\n// <li>\n// <div className=\"product-item\">\n//   <img\n//     src={require('../assets/images/product1.jpeg')}\n//     alt=\"product1\"\n//   />\n//   <span className=\"item-details\">\n//     <p data-item-title={props.name}>I'm a Product</p>\n//     <p data-item-price={props.price}>$180</p>\n//   </span>\n// </div>\n// </li>\n// {props.data.map(({ key, name, price }) => (\n//   <li key={key}>\n//     <div className=\"product-item\">\n//       <img\n//         src={require(`../assets/images/product${key}.jpeg`)}\n//         alt=\"product1\"\n//       />\n//       <span className=\"item-details\">\n//         <p data-item-title={name}>{name}</p>\n//         <p data-item-price={price}>{'$' + price}</p>\n//       </span>\n//     </div>\n//   </li>\n// ))}","map":{"version":3,"sources":["E:/React_Projects/e-commerce_bicycle/src/layout/Shop.js"],"names":["React","useState","useEffect","useReducer","useContext","useRef","Slider","ColorSelector","SortProductsCard","initialState","reducer","useDataFetching","ProductContext","createContext","FilterCard","props","toggled","updateToggle","price","color","animEnd","Products","items","map","name","key","released","src","ProductGalleryContainer","product","dispatch","filter","setFilter","filteredItems","length","Shop"],"mappings":"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;AACA;AACA;AAEA,SACE;AAAS,IAAA,SAAS,EAAC,oBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,mBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,EAEE,oBAAC,uBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAMD;;AACD,SAASoB,IAAT,EAAevB,cAAf,G,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, {\r\n  useState,\r\n  useEffect,\r\n  useReducer,\r\n  useContext,\r\n  useRef,\r\n} from 'react';\r\nimport { Slider, ColorSelector, SortProductsCard } from '../components/Filters';\r\nimport { initialState, reducer } from '../reducers/productItems';\r\nimport useDataFetching from '../components/useDataFetching';\r\nimport './Shop.css';\r\nimport '../layout/ProductFilter.css';\r\n\r\nconst ProductContext = React.createContext(null);\r\n// Use Ref doesn't work, wont re-render DOM\r\n// useState likely will work but would require two seperate state calls\r\n// Having two useRef's for each filter element and then a useState toggle may work, but would then require three lines of code opposed to two.\r\n// Bring Price Slider and Color filter inside the filter type container, then just control height\r\nfunction FilterCard() {\r\n  const { ...props } = useContext(ProductContext);\r\n  const [toggled, updateToggle] = useState({ price: true, color: '' });\r\n  return (\r\n    <div className=\"product-filter\">\r\n      <SortProductsCard {...props} />\r\n      <div className=\"filter-options\">\r\n        <h2>Filter By</h2>\r\n        <div data-is-toggled={toggled.price} className=\"filter-type\">\r\n          <div className=\"filter-type-header\">\r\n            <p>Price</p>\r\n            <span\r\n              onClick={() =>\r\n                updateToggle({ ...toggled, price: !toggled.price })\r\n              }\r\n              id={'price-toggle'}\r\n              className={`filter-toggle-action ${\r\n                toggled.price ? 'fas fa-minus' : 'fas fa-plus'\r\n              } `}\r\n            ></span>\r\n          </div>\r\n          <div\r\n            className=\"filter-content\"\r\n            id=\"price-slider\"\r\n            data-is-toggled={toggled.price}\r\n          >\r\n            {toggled.price && animEnd && <Slider {...props} />}\r\n          </div>\r\n        </div>\r\n\r\n        <div data-is-toggled={toggled.color} className=\"filter-type\">\r\n          <div className=\"filter-type-header\">\r\n            <p>Color</p>\r\n            <span\r\n              onClick={() =>\r\n                updateToggle({ ...toggled, color: !toggled.color })\r\n              }\r\n              id=\"color-toggle\"\r\n              className={`filter-toggle-action ${\r\n                toggled.color ? 'fas fa-minus' : 'fas fa-plus'\r\n              } `}\r\n            ></span>\r\n          </div>\r\n          <div\r\n            className=\"filter-content\"\r\n            id=\"color-filter\"\r\n            data-is-toggled={toggled.color}\r\n          >\r\n            <ul>\r\n              <ColorSelector {...props} />\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Products(props) {\r\n  return (\r\n    <div className=\"product-items-container\">\r\n      <ul>\r\n        {props.items.map(({ name, key, price, released, src }) => (\r\n          <li key={key}>\r\n            <div key={key} className=\"product-item\">\r\n              <img src={src} alt=\"product1\" />\r\n              <span className=\"item-details\">\r\n                <p data-item-title={name}>{name}</p>\r\n                <p data-item-price={price}>{'$' + price}</p>\r\n              </span>\r\n            </div>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\nfunction ProductGalleryContainer() {\r\n  const [product, dispatch] = useReducer(reducer, initialState);\r\n  const [filter, setFilter] = useState(product.items);\r\n  useEffect(() => {\r\n    setFilter(\r\n      product.filteredItems.length !== 0 ? product.filteredItems : product.items\r\n    );\r\n  }, [product]);\r\n  return (\r\n    <section className=\"product-gallery\">\r\n      <ProductContext.Provider value={{ product, dispatch }}>\r\n        <FilterCard />\r\n        <Products items={filter} />\r\n      </ProductContext.Provider>\r\n    </section>\r\n  );\r\n}\r\nfunction Shop(props) {\r\n  //------------------------FetchDataHook------------------//\r\n  // const { results, loading } = useDataFetching(\r\n  //   'https://raw.githubusercontent.com/mwayne16/e-commerce_bicycle/master/src/application.json'\r\n  // );\r\n\r\n  return (\r\n    <section className=\"product-collection\">\r\n      <h1 className=\"collection-header\">Our Collection</h1>\r\n      <ProductGalleryContainer />\r\n    </section>\r\n  );\r\n}\r\nexport { Shop, ProductContext };\r\n\r\n// <li>\r\n// <div className=\"product-item\">\r\n//   <img\r\n//     src={require('../assets/images/product1.jpeg')}\r\n//     alt=\"product1\"\r\n//   />\r\n//   <span className=\"item-details\">\r\n//     <p data-item-title={props.name}>I'm a Product</p>\r\n//     <p data-item-price={props.price}>$180</p>\r\n//   </span>\r\n// </div>\r\n// </li>\r\n// <li>\r\n// <div className=\"product-item\">\r\n//   <img\r\n//     src={require('../assets/images/product1.jpeg')}\r\n//     alt=\"product1\"\r\n//   />\r\n//   <span className=\"item-details\">\r\n//     <p data-item-title={props.name}>I'm a Product</p>\r\n//     <p data-item-price={props.price}>$180</p>\r\n//   </span>\r\n// </div>\r\n// </li>\r\n// <li>\r\n// <div className=\"product-item\">\r\n//   <img\r\n//     src={require('../assets/images/product1.jpeg')}\r\n//     alt=\"product1\"\r\n//   />\r\n//   <span className=\"item-details\">\r\n//     <p data-item-title={props.name}>I'm a Product</p>\r\n//     <p data-item-price={props.price}>$180</p>\r\n//   </span>\r\n// </div>\r\n// </li>\r\n// <li>\r\n// <div className=\"product-item\">\r\n//   <img\r\n//     src={require('../assets/images/product1.jpeg')}\r\n//     alt=\"product1\"\r\n//   />\r\n//   <span className=\"item-details\">\r\n//     <p data-item-title={props.name}>I'm a Product</p>\r\n//     <p data-item-price={props.price}>$180</p>\r\n//   </span>\r\n// </div>\r\n// </li>\r\n// <li>\r\n// <div className=\"product-item\">\r\n//   <img\r\n//     src={require('../assets/images/product1.jpeg')}\r\n//     alt=\"product1\"\r\n//   />\r\n//   <span className=\"item-details\">\r\n//     <p data-item-title={props.name}>I'm a Product</p>\r\n//     <p data-item-price={props.price}>$180</p>\r\n//   </span>\r\n// </div>\r\n// </li>\r\n// <li>\r\n// <div className=\"product-item\">\r\n//   <img\r\n//     src={require('../assets/images/product1.jpeg')}\r\n//     alt=\"product1\"\r\n//   />\r\n//   <span className=\"item-details\">\r\n//     <p data-item-title={props.name}>I'm a Product</p>\r\n//     <p data-item-price={props.price}>$180</p>\r\n//   </span>\r\n// </div>\r\n// </li>\r\n// <li>\r\n// <div className=\"product-item\">\r\n//   <img\r\n//     src={require('../assets/images/product1.jpeg')}\r\n//     alt=\"product1\"\r\n//   />\r\n//   <span className=\"item-details\">\r\n//     <p data-item-title={props.name}>I'm a Product</p>\r\n//     <p data-item-price={props.price}>$180</p>\r\n//   </span>\r\n// </div>\r\n// </li>\r\n\r\n// {props.data.map(({ key, name, price }) => (\r\n//   <li key={key}>\r\n//     <div className=\"product-item\">\r\n//       <img\r\n//         src={require(`../assets/images/product${key}.jpeg`)}\r\n//         alt=\"product1\"\r\n//       />\r\n//       <span className=\"item-details\">\r\n//         <p data-item-title={name}>{name}</p>\r\n//         <p data-item-price={price}>{'$' + price}</p>\r\n//       </span>\r\n//     </div>\r\n//   </li>\r\n// ))}\r\n"]},"metadata":{},"sourceType":"module"}