{"ast":null,"code":"var _jsxFileName = \"E:\\\\React_Projects\\\\e-commerce_bicycle\\\\src\\\\components\\\\ProductModal.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport '../layout/ProductModal.css'; // Lift state up the same way I did with the color selector to filter card component\n\nfunction ProductModal(props) {\n  const modal = document.querySelector('#root-product-modal'); // modal.dataset.toggled = props.toggled ? true : false;\n\n  [modal.dataset.toggled, ...document.body.dataset.toggled] = props.toggled;\n  console.log(document.body.dataset.toggled);\n  const previewedProduct = props.items.find(product => product.key === props.selectedProduct);\n  const {\n    name,\n    sku,\n    price,\n    color,\n    src\n  } = previewedProduct;\n  return ReactDOM.createPortal(React.createElement(\"div\", {\n    className: \"product-modal\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"product-modal-img\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: src,\n    alt: \"productimage\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"product-modal-overview\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, name), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \"SKU: \", sku), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, price), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, \"view full details\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, \"Color:\", color), React.createElement(\"p\", {\n    style: {\n      background: color\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, \"Color\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, \"Quanity Box\"), React.createElement(\"button\", {\n    onClick: () => {\n      modal.dataset.toggled = false;\n      props.close(true);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, \"Add To Cart\"))), modal);\n}\n\nexport default ProductModal;","map":{"version":3,"sources":["E:/React_Projects/e-commerce_bicycle/src/components/ProductModal.js"],"names":["React","ReactDOM","ProductModal","props","modal","document","querySelector","dataset","toggled","body","console","log","previewedProduct","items","find","product","key","selectedProduct","name","sku","price","color","src","createPortal","background","close"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,4BAAP,C,CACA;;AACA,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAC3B,QAAMC,KAAK,GAAGC,QAAQ,CAACC,aAAT,CAAuB,qBAAvB,CAAd,CAD2B,CAE3B;;AAEA,GAACF,KAAK,CAACG,OAAN,CAAcC,OAAf,EAAwB,GAAGH,QAAQ,CAACI,IAAT,CAAcF,OAAd,CAAsBC,OAAjD,IAA4DL,KAAK,CAACK,OAAlE;AAEAE,EAAAA,OAAO,CAACC,GAAR,CAAYN,QAAQ,CAACI,IAAT,CAAcF,OAAd,CAAsBC,OAAlC;AACA,QAAMI,gBAAgB,GAAGT,KAAK,CAACU,KAAN,CAAYC,IAAZ,CACtBC,OAAD,IAAaA,OAAO,CAACC,GAAR,KAAgBb,KAAK,CAACc,eADZ,CAAzB;AAGA,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,GAAR;AAAaC,IAAAA,KAAb;AAAoBC,IAAAA,KAApB;AAA2BC,IAAAA;AAA3B,MAAmCV,gBAAzC;AACA,SAAOX,QAAQ,CAACsB,YAAT,CACL;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,GAAG,EAAED,GAAV;AAAe,IAAA,GAAG,EAAC,cAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAIE;AAAK,IAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKJ,IAAL,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAASC,GAAT,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIC,KAAJ,CAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAJF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAUC,KAAV,CALF,EAME;AAAG,IAAA,KAAK,EAAE;AAAEG,MAAAA,UAAU,EAAEH;AAAd,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aANF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAPF,EAQE;AACE,IAAA,OAAO,EAAE,MAAM;AACbjB,MAAAA,KAAK,CAACG,OAAN,CAAcC,OAAd,GAAwB,KAAxB;AACAL,MAAAA,KAAK,CAACsB,KAAN,CAAY,IAAZ;AACD,KAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBARF,CAJF,CADK,EAuBLrB,KAvBK,CAAP;AAyBD;;AACD,eAAeF,YAAf","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport '../layout/ProductModal.css';\r\n// Lift state up the same way I did with the color selector to filter card component\r\nfunction ProductModal(props) {\r\n  const modal = document.querySelector('#root-product-modal');\r\n  // modal.dataset.toggled = props.toggled ? true : false;\r\n\r\n  [modal.dataset.toggled, ...document.body.dataset.toggled] = props.toggled;\r\n\r\n  console.log(document.body.dataset.toggled);\r\n  const previewedProduct = props.items.find(\r\n    (product) => product.key === props.selectedProduct\r\n  );\r\n  const { name, sku, price, color, src } = previewedProduct;\r\n  return ReactDOM.createPortal(\r\n    <div className=\"product-modal\">\r\n      <div className=\"product-modal-img\">\r\n        <img src={src} alt=\"productimage\" />\r\n      </div>\r\n      <div className=\"product-modal-overview\">\r\n        <h1>{name}</h1>\r\n        <p>SKU: {sku}</p>\r\n        <p>{price}</p>\r\n        <span>view full details</span>\r\n        <p>Color:{color}</p>\r\n        <p style={{ background: color }}>Color</p>\r\n        <div>Quanity Box</div>\r\n        <button\r\n          onClick={() => {\r\n            modal.dataset.toggled = false;\r\n            props.close(true);\r\n          }}\r\n        >\r\n          Add To Cart\r\n        </button>\r\n      </div>\r\n    </div>,\r\n    modal\r\n  );\r\n}\r\nexport default ProductModal;\r\n"]},"metadata":{},"sourceType":"module"}