{"ast":null,"code":"import _toConsumableArray from \"E:\\\\React_Projects\\\\e-commerce_bicycle\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"E:\\\\React_Projects\\\\e-commerce_bicycle\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport { useState, useEffect } from 'react';\n\nfunction usePriceFormatter(array) {\n  var _useState = useState(_toConsumableArray(array)),\n      _useState2 = _slicedToArray(_useState, 2),\n      formattedItems = _useState2[0],\n      setPriceFormat = _useState2[1];\n\n  var formatter = new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'USD',\n    minimumFractionDigits: 2\n  });\n  useEffect(function () {\n    setPriceFormat(function () {\n      return formattedItems.map(function (value, index, arr) {\n        formatter.format(arr[index].price);\n        return arr[index];\n      });\n    });\n  }, []);\n  console.log(formattedItems);\n  return [formattedItems];\n}\n\nexport default usePriceFormatter;","map":{"version":3,"sources":["E:/React_Projects/e-commerce_bicycle/client/src/components/custom_hooks/usePriceFormatter.js"],"names":["useState","useEffect","usePriceFormatter","array","formattedItems","setPriceFormat","formatter","Intl","NumberFormat","style","currency","minimumFractionDigits","map","value","index","arr","format","price","console","log"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AAEA,SAASC,iBAAT,CAA2BC,KAA3B,EAAkC;AAAA,kBACSH,QAAQ,oBAAKG,KAAL,EADjB;AAAA;AAAA,MACzBC,cADyB;AAAA,MACTC,cADS;;AAEhC,MAAMC,SAAS,GAAG,IAAIC,IAAI,CAACC,YAAT,CAAsB,OAAtB,EAA+B;AAC/CC,IAAAA,KAAK,EAAE,UADwC;AAE/CC,IAAAA,QAAQ,EAAE,KAFqC;AAG/CC,IAAAA,qBAAqB,EAAE;AAHwB,GAA/B,CAAlB;AAKAV,EAAAA,SAAS,CAAC,YAAM;AACdI,IAAAA,cAAc,CAAC;AAAA,aACbD,cAAc,CAACQ,GAAf,CAAmB,UAACC,KAAD,EAAQC,KAAR,EAAeC,GAAf,EAAuB;AACxCT,QAAAA,SAAS,CAACU,MAAV,CAAiBD,GAAG,CAACD,KAAD,CAAH,CAAWG,KAA5B;AACA,eAAOF,GAAG,CAACD,KAAD,CAAV;AACD,OAHD,CADa;AAAA,KAAD,CAAd;AAMD,GAPQ,EAON,EAPM,CAAT;AAQAI,EAAAA,OAAO,CAACC,GAAR,CAAYf,cAAZ;AACA,SAAO,CAACA,cAAD,CAAP;AACD;;AAED,eAAeF,iBAAf","sourcesContent":["import { useState, useEffect } from 'react';\r\n\r\nfunction usePriceFormatter(array) {\r\n  const [formattedItems, setPriceFormat] = useState([...array]);\r\n  const formatter = new Intl.NumberFormat('en-US', {\r\n    style: 'currency',\r\n    currency: 'USD',\r\n    minimumFractionDigits: 2,\r\n  });\r\n  useEffect(() => {\r\n    setPriceFormat(() =>\r\n      formattedItems.map((value, index, arr) => {\r\n        formatter.format(arr[index].price);\r\n        return arr[index];\r\n      })\r\n    );\r\n  }, []);\r\n  console.log(formattedItems);\r\n  return [formattedItems];\r\n}\r\n\r\nexport default usePriceFormatter;\r\n"]},"metadata":{},"sourceType":"module"}