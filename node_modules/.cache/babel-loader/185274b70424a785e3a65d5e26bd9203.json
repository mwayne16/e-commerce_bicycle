{"ast":null,"code":"var _jsxFileName = \"E:\\\\React_Projects\\\\e-commerce_bicycle\\\\src\\\\layout\\\\Shop.js\";\nimport React, { useState, useEffect, useReducer, useContext } from 'react';\nimport { Slider, ColorSelector, SortProductsCard } from '../components/Filters';\nimport { initialState, reducer } from '../reducers/productReducer';\nimport { Transition } from 'react-transition-group';\nimport ProductModal from '../components/modals/ProductModal';\nimport useModalToggle from '../components/custom_hooks/useModalToggle';\nimport './Shop.css';\nimport '../layout/ProductFilter.css';\nconst ProductContext = React.createContext(null);\n\nfunction FilterCard() {\n  const toggledStyles = {\n    entered: {\n      zIndex: 1\n    },\n    exiting: {\n      maxHeight: '100px'\n    },\n    exited: {\n      transform: 'translateY(-100%)',\n      maxHeight: 0,\n      overflow: 'hidden',\n      zIndex: -1\n    }\n  };\n  const { ...props\n  } = useContext(ProductContext);\n  const [toggled, updateToggle] = useState({\n    price: true,\n    color: false\n  });\n  const [highlightedColor, updateColor] = useState('');\n\n  const targetedColor = color => {\n    return updateColor(`: ${color}`);\n  }; //Add clear filter functionality\n\n\n  return React.createElement(\"div\", {\n    className: \"product-filter\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(SortProductsCard, Object.assign({}, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"filter-options\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \"Filter By\"), React.createElement(\"div\", {\n    \"data-is-toggled\": toggled.price,\n    className: \"filter-type\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"filter-type-header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, \"Price\"), React.createElement(\"span\", {\n    onClick: () => updateToggle({ ...toggled,\n      price: !toggled.price\n    }),\n    id: 'price-toggle',\n    className: `filter-toggle-action ${toggled.price ? 'fas fa-minus' : 'fas fa-plus'} `,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  })), React.createElement(Transition, {\n    timeout: 0,\n    in: toggled.price,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, state => React.createElement(\"div\", {\n    style: { ...toggledStyles[state],\n      transition: '.2s ease-in-out'\n    },\n    className: \"filter-content\",\n    id: \"price-slider\",\n    \"data-is-toggled\": toggled.price,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(Slider, Object.assign({}, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }))))), React.createElement(\"div\", {\n    \"data-is-toggled\": toggled.color,\n    className: \"filter-type\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"filter-type-header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, highlightedColor !== ': undefined' ? 'Color' + highlightedColor : 'Color'), React.createElement(\"span\", {\n    onClick: () => updateToggle({ ...toggled,\n      color: !toggled.color\n    }),\n    id: \"color-toggle\",\n    className: `filter-toggle-action ${toggled.color ? 'fas fa-minus' : 'fas fa-plus'} `,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  })), React.createElement(Transition, {\n    timeout: 0,\n    in: toggled.color,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, state => React.createElement(\"div\", {\n    style: { ...toggledStyles[state],\n      transition: '.2s ease-in-out'\n    },\n    className: \"filter-content\",\n    id: \"color-filter\",\n    \"data-is-toggled\": toggled.color,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    className: \"color-filter-list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, React.createElement(ColorSelector, Object.assign({\n    displayColor: targetedColor\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }))))))));\n}\n\nfunction Products(props) {\n  const [key, setKey] = useState(null);\n\n  const passProduct = data => {\n    setKey(data);\n    setToggle(true);\n  };\n\n  const {\n    toggle,\n    setToggle\n  } = useModalToggle();\n  return React.createElement(\"div\", {\n    className: \"product-items-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, props.items.map(({\n    name,\n    key,\n    price,\n    src,\n    fileName\n  }) => React.createElement(\"li\", {\n    key: key,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"product-item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"product-img\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: src,\n    alt: `${name} bike`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    onClick: passProduct.bind(this, key),\n    className: \"product-quickview\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, \"Quick View\"))), React.createElement(\"span\", {\n    className: \"item-details\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    onClick: () => console.log(src),\n    \"data-item-title\": name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, name), React.createElement(\"p\", {\n    \"data-item-price\": price,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, '$' + price, \".00\")))))), toggle && React.createElement(ProductModal, Object.assign({}, props, {\n    toggle: toggle,\n    selectedProduct: key,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  })));\n}\n\nfunction ProductGalleryContainer() {\n  const [product, dispatch] = useReducer(reducer, initialState);\n  const [filter, setFilter] = useState(product.items);\n  useEffect(() => {\n    setFilter(product.filteredItems.length !== 0 ? product.filteredItems : product.items);\n  }, [product]);\n  return React.createElement(\"section\", {\n    className: \"product-gallery\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  }, React.createElement(ProductContext.Provider, {\n    value: {\n      product,\n      dispatch\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  }, React.createElement(FilterCard, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  }), React.createElement(Products, {\n    items: filter,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  })));\n}\n\nfunction Shop(props) {\n  //------------------------FetchDataHook------------------//\n  // const { results, loading } = useDataFetching(\n  //   'https://raw.githubusercontent.com/mwayne16/e-commerce_bicycle/master/src/application.json'\n  // );\n  return React.createElement(\"section\", {\n    className: \"product-collection\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: \"collection-header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175\n    },\n    __self: this\n  }, \"Our Collection\"), React.createElement(ProductGalleryContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176\n    },\n    __self: this\n  }));\n}\n\nexport { Shop, ProductContext }; // <li>\n// <div className=\"product-item\">\n//   <img\n//     src={require('../assets/images/product1.jpeg')}\n//     alt=\"product1\"\n//   />\n//   <span className=\"item-details\">\n//     <p data-item-title={props.name}>I'm a Product</p>\n//     <p data-item-price={props.price}>$180</p>\n//   </span>\n// </div>\n// </li>\n// <li>\n// <div className=\"product-item\">\n//   <img\n//     src={require('../assets/images/product1.jpeg')}\n//     alt=\"product1\"\n//   />\n//   <span className=\"item-details\">\n//     <p data-item-title={props.name}>I'm a Product</p>\n//     <p data-item-price={props.price}>$180</p>\n//   </span>\n// </div>\n// </li>\n// <li>\n// <div className=\"product-item\">\n//   <img\n//     src={require('../assets/images/product1.jpeg')}\n//     alt=\"product1\"\n//   />\n//   <span className=\"item-details\">\n//     <p data-item-title={props.name}>I'm a Product</p>\n//     <p data-item-price={props.price}>$180</p>\n//   </span>\n// </div>\n// </li>\n// <li>\n// <div className=\"product-item\">\n//   <img\n//     src={require('../assets/images/product1.jpeg')}\n//     alt=\"product1\"\n//   />\n//   <span className=\"item-details\">\n//     <p data-item-title={props.name}>I'm a Product</p>\n//     <p data-item-price={props.price}>$180</p>\n//   </span>\n// </div>\n// </li>\n// <li>\n// <div className=\"product-item\">\n//   <img\n//     src={require('../assets/images/product1.jpeg')}\n//     alt=\"product1\"\n//   />\n//   <span className=\"item-details\">\n//     <p data-item-title={props.name}>I'm a Product</p>\n//     <p data-item-price={props.price}>$180</p>\n//   </span>\n// </div>\n// </li>\n// <li>\n// <div className=\"product-item\">\n//   <img\n//     src={require('../assets/images/product1.jpeg')}\n//     alt=\"product1\"\n//   />\n//   <span className=\"item-details\">\n//     <p data-item-title={props.name}>I'm a Product</p>\n//     <p data-item-price={props.price}>$180</p>\n//   </span>\n// </div>\n// </li>\n// <li>\n// <div className=\"product-item\">\n//   <img\n//     src={require('../assets/images/product1.jpeg')}\n//     alt=\"product1\"\n//   />\n//   <span className=\"item-details\">\n//     <p data-item-title={props.name}>I'm a Product</p>\n//     <p data-item-price={props.price}>$180</p>\n//   </span>\n// </div>\n// </li>\n// {props.data.map(({ key, name, price }) => (\n//   <li key={key}>\n//     <div className=\"product-item\">\n//       <img\n//         src={require(`../assets/images/product${key}.jpeg`)}\n//         alt=\"product1\"\n//       />\n//       <span className=\"item-details\">\n//         <p data-item-title={name}>{name}</p>\n//         <p data-item-price={price}>{'$' + price}</p>\n//       </span>\n//     </div>\n//   </li>\n// ))}","map":{"version":3,"sources":["E:/React_Projects/e-commerce_bicycle/src/layout/Shop.js"],"names":["React","useState","useEffect","useReducer","useContext","Slider","ColorSelector","SortProductsCard","initialState","reducer","Transition","ProductModal","useModalToggle","ProductContext","createContext","FilterCard","toggledStyles","entered","zIndex","exiting","maxHeight","exited","transform","overflow","props","toggled","updateToggle","price","color","highlightedColor","updateColor","targetedColor","state","transition","Products","key","setKey","passProduct","data","setToggle","toggle","items","map","name","src","fileName","bind","console","log","ProductGalleryContainer","product","dispatch","filter","setFilter","filteredItems","length","Shop"],"mappings":"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AAO,CAACT,KAD9D,CAAT;AAGD,GAJQ,EAIN,CAACS,OAAD,CAJM,CAAT;AAKA,SACE;AAAS,IAAA,SAAS,EAAC,iBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,cAAD,CAAgB,QAAhB;AAAyB,IAAA,KAAK,EAAE;AAAEA,MAAAA,OAAF;AAAWC,MAAAA;AAAX,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAEC,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,CADF;AAQD;;AACD,SAASI,IAAT,CAAchC,KAAd,EAAqB;AACnB;AACA;AACA;AACA;AACA,SACE;AAAS,IAAA,SAAS,EAAC,oBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,mBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,EAEE,oBAAC,uBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAMD;;AACD,SAASgC,IAAT,EAAe3C,cAAf,G,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { useState, useEffect, useReducer, useContext } from 'react';\r\nimport { Slider, ColorSelector, SortProductsCard } from '../components/Filters';\r\nimport { initialState, reducer } from '../reducers/productReducer';\r\nimport { Transition } from 'react-transition-group';\r\nimport ProductModal from '../components/modals/ProductModal';\r\nimport useModalToggle from '../components/custom_hooks/useModalToggle';\r\nimport './Shop.css';\r\nimport '../layout/ProductFilter.css';\r\n\r\nconst ProductContext = React.createContext(null);\r\n\r\nfunction FilterCard() {\r\n  const toggledStyles = {\r\n    entered: {\r\n      zIndex: 1,\r\n    },\r\n    exiting: {\r\n      maxHeight: '100px',\r\n    },\r\n    exited: {\r\n      transform: 'translateY(-100%)',\r\n      maxHeight: 0,\r\n      overflow: 'hidden',\r\n      zIndex: -1,\r\n    },\r\n  };\r\n  const { ...props } = useContext(ProductContext);\r\n  const [toggled, updateToggle] = useState({ price: true, color: false });\r\n  const [highlightedColor, updateColor] = useState('');\r\n\r\n  const targetedColor = (color) => {\r\n    return updateColor(`: ${color}`);\r\n  };\r\n\r\n  //Add clear filter functionality\r\n  return (\r\n    <div className=\"product-filter\">\r\n      <SortProductsCard {...props} />\r\n      <div className=\"filter-options\">\r\n        <h2>Filter By</h2>\r\n        <div data-is-toggled={toggled.price} className=\"filter-type\">\r\n          <div className=\"filter-type-header\">\r\n            <p>Price</p>\r\n            <span\r\n              onClick={() =>\r\n                updateToggle({ ...toggled, price: !toggled.price })\r\n              }\r\n              id={'price-toggle'}\r\n              className={`filter-toggle-action ${\r\n                toggled.price ? 'fas fa-minus' : 'fas fa-plus'\r\n              } `}\r\n            ></span>\r\n          </div>\r\n          <Transition timeout={0} in={toggled.price}>\r\n            {(state) => (\r\n              <div\r\n                style={{\r\n                  ...toggledStyles[state],\r\n                  transition: '.2s ease-in-out',\r\n                }}\r\n                className=\"filter-content\"\r\n                id=\"price-slider\"\r\n                data-is-toggled={toggled.price}\r\n              >\r\n                <Slider {...props} />\r\n              </div>\r\n            )}\r\n          </Transition>\r\n        </div>\r\n\r\n        <div data-is-toggled={toggled.color} className=\"filter-type\">\r\n          <div className=\"filter-type-header\">\r\n            <p>\r\n              {highlightedColor !== ': undefined'\r\n                ? 'Color' + highlightedColor\r\n                : 'Color'}\r\n            </p>\r\n            <span\r\n              onClick={() =>\r\n                updateToggle({ ...toggled, color: !toggled.color })\r\n              }\r\n              id=\"color-toggle\"\r\n              className={`filter-toggle-action ${\r\n                toggled.color ? 'fas fa-minus' : 'fas fa-plus'\r\n              } `}\r\n            ></span>\r\n          </div>\r\n          <Transition timeout={0} in={toggled.color}>\r\n            {(state) => (\r\n              <div\r\n                style={{\r\n                  ...toggledStyles[state],\r\n                  transition: '.2s ease-in-out',\r\n                }}\r\n                className=\"filter-content\"\r\n                id=\"color-filter\"\r\n                data-is-toggled={toggled.color}\r\n              >\r\n                <ul className=\"color-filter-list\">\r\n                  <ColorSelector displayColor={targetedColor} {...props} />\r\n                </ul>\r\n              </div>\r\n            )}\r\n          </Transition>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Products(props) {\r\n  const [key, setKey] = useState(null);\r\n  const passProduct = (data) => {\r\n    setKey(data);\r\n    setToggle(true);\r\n  };\r\n  const { toggle, setToggle } = useModalToggle();\r\n\r\n  return (\r\n    <div className=\"product-items-container\">\r\n      <ul>\r\n        {props.items.map(({ name, key, price, src, fileName }) => (\r\n          <li key={key}>\r\n            <div className=\"product-item\">\r\n              <div className=\"product-img\">\r\n                <img src={src} alt={`${name} bike`} />\r\n                <span\r\n                  onClick={passProduct.bind(this, key)}\r\n                  className=\"product-quickview\"\r\n                >\r\n                  <p>Quick View</p>\r\n                </span>\r\n              </div>\r\n              <span className=\"item-details\">\r\n                <p onClick={() => console.log(src)} data-item-title={name}>\r\n                  {name}\r\n                </p>\r\n                <p data-item-price={price}>{'$' + price}.00</p>\r\n              </span>\r\n            </div>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      {toggle && (\r\n        <ProductModal {...props} toggle={toggle} selectedProduct={key} />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction ProductGalleryContainer() {\r\n  const [product, dispatch] = useReducer(reducer, initialState);\r\n  const [filter, setFilter] = useState(product.items);\r\n  useEffect(() => {\r\n    setFilter(\r\n      product.filteredItems.length !== 0 ? product.filteredItems : product.items\r\n    );\r\n  }, [product]);\r\n  return (\r\n    <section className=\"product-gallery\">\r\n      <ProductContext.Provider value={{ product, dispatch }}>\r\n        <FilterCard />\r\n        <Products items={filter} />\r\n      </ProductContext.Provider>\r\n    </section>\r\n  );\r\n}\r\nfunction Shop(props) {\r\n  //------------------------FetchDataHook------------------//\r\n  // const { results, loading } = useDataFetching(\r\n  //   'https://raw.githubusercontent.com/mwayne16/e-commerce_bicycle/master/src/application.json'\r\n  // );\r\n  return (\r\n    <section className=\"product-collection\">\r\n      <h1 className=\"collection-header\">Our Collection</h1>\r\n      <ProductGalleryContainer />\r\n    </section>\r\n  );\r\n}\r\nexport { Shop, ProductContext };\r\n\r\n// <li>\r\n// <div className=\"product-item\">\r\n//   <img\r\n//     src={require('../assets/images/product1.jpeg')}\r\n//     alt=\"product1\"\r\n//   />\r\n//   <span className=\"item-details\">\r\n//     <p data-item-title={props.name}>I'm a Product</p>\r\n//     <p data-item-price={props.price}>$180</p>\r\n//   </span>\r\n// </div>\r\n// </li>\r\n// <li>\r\n// <div className=\"product-item\">\r\n//   <img\r\n//     src={require('../assets/images/product1.jpeg')}\r\n//     alt=\"product1\"\r\n//   />\r\n//   <span className=\"item-details\">\r\n//     <p data-item-title={props.name}>I'm a Product</p>\r\n//     <p data-item-price={props.price}>$180</p>\r\n//   </span>\r\n// </div>\r\n// </li>\r\n// <li>\r\n// <div className=\"product-item\">\r\n//   <img\r\n//     src={require('../assets/images/product1.jpeg')}\r\n//     alt=\"product1\"\r\n//   />\r\n//   <span className=\"item-details\">\r\n//     <p data-item-title={props.name}>I'm a Product</p>\r\n//     <p data-item-price={props.price}>$180</p>\r\n//   </span>\r\n// </div>\r\n// </li>\r\n// <li>\r\n// <div className=\"product-item\">\r\n//   <img\r\n//     src={require('../assets/images/product1.jpeg')}\r\n//     alt=\"product1\"\r\n//   />\r\n//   <span className=\"item-details\">\r\n//     <p data-item-title={props.name}>I'm a Product</p>\r\n//     <p data-item-price={props.price}>$180</p>\r\n//   </span>\r\n// </div>\r\n// </li>\r\n// <li>\r\n// <div className=\"product-item\">\r\n//   <img\r\n//     src={require('../assets/images/product1.jpeg')}\r\n//     alt=\"product1\"\r\n//   />\r\n//   <span className=\"item-details\">\r\n//     <p data-item-title={props.name}>I'm a Product</p>\r\n//     <p data-item-price={props.price}>$180</p>\r\n//   </span>\r\n// </div>\r\n// </li>\r\n// <li>\r\n// <div className=\"product-item\">\r\n//   <img\r\n//     src={require('../assets/images/product1.jpeg')}\r\n//     alt=\"product1\"\r\n//   />\r\n//   <span className=\"item-details\">\r\n//     <p data-item-title={props.name}>I'm a Product</p>\r\n//     <p data-item-price={props.price}>$180</p>\r\n//   </span>\r\n// </div>\r\n// </li>\r\n// <li>\r\n// <div className=\"product-item\">\r\n//   <img\r\n//     src={require('../assets/images/product1.jpeg')}\r\n//     alt=\"product1\"\r\n//   />\r\n//   <span className=\"item-details\">\r\n//     <p data-item-title={props.name}>I'm a Product</p>\r\n//     <p data-item-price={props.price}>$180</p>\r\n//   </span>\r\n// </div>\r\n// </li>\r\n\r\n// {props.data.map(({ key, name, price }) => (\r\n//   <li key={key}>\r\n//     <div className=\"product-item\">\r\n//       <img\r\n//         src={require(`../assets/images/product${key}.jpeg`)}\r\n//         alt=\"product1\"\r\n//       />\r\n//       <span className=\"item-details\">\r\n//         <p data-item-title={name}>{name}</p>\r\n//         <p data-item-price={price}>{'$' + price}</p>\r\n//       </span>\r\n//     </div>\r\n//   </li>\r\n// ))}\r\n"]},"metadata":{},"sourceType":"module"}